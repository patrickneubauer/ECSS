// automatically generated by Xtext
grammar deflang.com.puppetlabs.geppetto.module2.dsl.Module2 with org.eclipse.xtext.common.Terminals

import "http://www.com.srclang/puppetlabs/geppetto/module2/dsl/Module2" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

JsonObject_Impl returns JsonObject:
	{JsonObject}
	'JsonObject'
	'{'
		('pairs' '{' pairs+=Pair ( "," pairs+=Pair)* '}' )?
	'}';

Pair returns Pair:
	Pair_Impl | UnrecognizedPair | MetadataRefPair;

Value returns Value:
	Value_Impl | JsonObject_Impl | JsonMetadata | JsonArray | JsonDependency | JsonRequirement | JsonValue_Impl | RequirementNameValue | JsonVersionRange | JsonModuleName | JsonTag | JsonVersion | JsonOS;


Pair_Impl returns Pair:
	{Pair}
	'Pair'
	name=EString
	'{'
		('value' value=Value)?
	'}';

JsonMetadata returns JsonMetadata:
	{JsonMetadata}
	'JsonMetadata'
	'{'
		('pairs' '{' pairs+=Pair ( "," pairs+=Pair)* '}' )?
	'}';

JsonDependency returns JsonDependency:
	{JsonDependency}
	'JsonDependency'
	'{'
		('pairs' '{' pairs+=Pair ( "," pairs+=Pair)* '}' )?
	'}';

JsonRequirement returns JsonRequirement:
	{JsonRequirement}
	'JsonRequirement'
	'{'
		('pairs' '{' pairs+=Pair ( "," pairs+=Pair)* '}' )?
	'}';

JsonOS returns JsonOS:
	{JsonOS}
	'JsonOS'
	'{'
		('pairs' '{' pairs+=Pair ( "," pairs+=Pair)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

Value_Impl returns Value:
	{Value}
	'Value'
	;

UnrecognizedPair returns UnrecognizedPair:
	{UnrecognizedPair}
	'UnrecognizedPair'
	name=EString
	'{'
		('value' value=Value)?
	'}';

MetadataRefPair returns MetadataRefPair:
	{MetadataRefPair}
	'MetadataRefPair'
	name=EString
	'{'
		('ref' ref=[JsonMetadata|EString])?
		('value' value=Value)?
	'}';

JsonArray returns JsonArray:
	{JsonArray}
	'JsonArray'
	'{'
		('value' '{' value+=Value ( "," value+=Value)* '}' )?
	'}';

JsonValue_Impl returns JsonValue:
	{JsonValue}
	'JsonValue'
	'{'
		('value' value=EJavaObject)?
	'}';

RequirementNameValue returns RequirementNameValue:
	{RequirementNameValue}
	'RequirementNameValue'
	'{'
		('value' value=EJavaObject)?
	'}';

JsonVersionRange returns JsonVersionRange:
	{JsonVersionRange}
	'JsonVersionRange'
	'{'
		('value' value=EJavaObject)?
	'}';

JsonModuleName returns JsonModuleName:
	{JsonModuleName}
	'JsonModuleName'
	'{'
		('value' value=EJavaObject)?
	'}';

JsonTag returns JsonTag:
	{JsonTag}
	'JsonTag'
	'{'
		('value' value=EJavaObject)?
	'}';

JsonVersion returns JsonVersion:
	{JsonVersion}
	'JsonVersion'
	'{'
		('value' value=EJavaObject)?
	'}';

EJavaObject returns ecore::EJavaObject:
	'EJavaObject' /* TODO: implement this rule and an appropriate IValueConverter */;
