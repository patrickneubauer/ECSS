// automatically generated by Xtext
grammar deflang.de.itemis.tooling.xturtle.Xturtle with org.eclipse.xtext.common.Terminals

import "http://www.de.srclang/itemis/tooling/xturtle/Xturtle" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DirectiveBlock returns DirectiveBlock:
	{DirectiveBlock}
	'DirectiveBlock'
	'{'
		('directives' directives=Directives)?
		('triples' '{' triples+=Triples ( "," triples+=Triples)* '}' )?
		('directiveblock' directiveblock=DirectiveBlock)?
	'}';



Directive returns Directive:
	Directive_Impl | PrefixId | Base;

Subject returns Subject:
	Subject_Impl | Resource_Impl | Blank_Impl | BlankObjects | BlankCollection | QNameDef | UriDef;


Predicate returns Predicate:
	Predicate_Impl | ResourceRef_Impl | QNameRef | UriRef | TypePredicate;

Object returns Object:
	Object_Impl | ResourceRef_Impl | Blank_Impl | BlankObjects | BlankCollection | QNameRef | UriRef | Literal_Impl | NumberLiteral | StringLiteral | BooleanLiteral;


Resource returns Resource:
	Resource_Impl | QNameDef | UriDef;

ResourceRef returns ResourceRef:
	ResourceRef_Impl | QNameRef | UriRef;

Directives returns Directives:
	{Directives}
	'Directives'
	'{'
		('directive' '{' directive+=Directive ( "," directive+=Directive)* '}' )?
	'}';

Triples returns Triples:
	{Triples}
	'Triples'
	'{'
		('subject' subject=Subject)?
		('predObjs' '{' predObjs+=PredicateObjectList ( "," predObjs+=PredicateObjectList)* '}' )?
	'}';

Directive_Impl returns Directive:
	{Directive}
	'Directive'
	'{'
		('uri' uri=EString)?
	'}';

EString returns ecore::EString:
	STRING | ID;

PrefixId returns PrefixId:
	{PrefixId}
	'PrefixId'
	'{'
		('uri' uri=EString)?
		('id' id=EString)?
	'}';

Base returns Base:
	{Base}
	'Base'
	'{'
		('uri' uri=EString)?
	'}';

Subject_Impl returns Subject:
	{Subject}
	'Subject'
	;

PredicateObjectList returns PredicateObjectList:
	{PredicateObjectList}
	'PredicateObjectList'
	'{'
		('verb' verb=Predicate)?
		('objects' '{' objects+=Object ( "," objects+=Object)* '}' )?
	'}';

Resource_Impl returns Resource:
	{Resource}
	'Resource'
	;

Blank_Impl returns Blank:
	{Blank}
	'Blank'
	;

BlankObjects returns BlankObjects:
	{BlankObjects}
	'BlankObjects'
	'{'
		('predObjs' '{' predObjs+=PredicateObjectList ( "," predObjs+=PredicateObjectList)* '}' )?
	'}';

BlankCollection returns BlankCollection:
	{BlankCollection}
	'BlankCollection'
	'{'
		('objects' '{' objects+=Object ( "," objects+=Object)* '}' )?
	'}';

QNameDef returns QNameDef:
	{QNameDef}
	'QNameDef'
	'{'
		('id' id=EString)?
		('prefix' prefix=[PrefixId|EString])?
	'}';

UriDef returns UriDef:
	{UriDef}
	'UriDef'
	'{'
		('uri' uri=EString)?
	'}';

Object_Impl returns Object:
	{Object}
	'Object'
	;

ResourceRef_Impl returns ResourceRef:
	{ResourceRef}
	'ResourceRef'
	'{'
		('ref' ref=[Resource|EString])?
	'}';

QNameRef returns QNameRef:
	{QNameRef}
	'QNameRef'
	'{'
		('ref' ref=[Resource|EString])?
		('prefix' prefix=[PrefixId|EString])?
	'}';

UriRef returns UriRef:
	{UriRef}
	'UriRef'
	'{'
		('ref' ref=[Resource|EString])?
	'}';

Literal_Impl returns Literal:
	{Literal}
	'Literal'
	'{'
		('value' value=EString)?
	'}';

NumberLiteral returns NumberLiteral:
	{NumberLiteral}
	'NumberLiteral'
	'{'
		('value' value=EString)?
	'}';

StringLiteral returns StringLiteral:
	{StringLiteral}
	'StringLiteral'
	'{'
		('value' value=EString)?
		('language' language=EString)?
		('type' type=ResourceRef)?
	'}';

BooleanLiteral returns BooleanLiteral:
	{BooleanLiteral}
	'BooleanLiteral'
	'{'
		('value' value=EString)?
	'}';

Predicate_Impl returns Predicate:
	{Predicate}
	'Predicate'
	;

TypePredicate returns TypePredicate:
	{TypePredicate}
	'TypePredicate'
	;
