/**
 * generated by Xtext 2.15.0
 */
package uk.ac.york.cs.ecss.language.ecssLanguage.impl;

import java.math.BigDecimal;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.york.cs.ecss.language.ecssLanguage.Config;
import uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Config</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ConfigImpl#isHasMinImprovement <em>Has Min Improvement</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ConfigImpl#getMinImprovement <em>Min Improvement</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ConfigImpl#isHasMaxDegression <em>Has Max Degression</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ConfigImpl#getMaxDegression <em>Max Degression</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ConfigImpl#isHaxMaxThings <em>Hax Max Things</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ConfigImpl#getMaxThings <em>Max Things</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConfigImpl extends MinimalEObjectImpl.Container implements Config
{
  /**
   * The default value of the '{@link #isHasMinImprovement() <em>Has Min Improvement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasMinImprovement()
   * @generated
   * @ordered
   */
  protected static final boolean HAS_MIN_IMPROVEMENT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isHasMinImprovement() <em>Has Min Improvement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasMinImprovement()
   * @generated
   * @ordered
   */
  protected boolean hasMinImprovement = HAS_MIN_IMPROVEMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getMinImprovement() <em>Min Improvement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinImprovement()
   * @generated
   * @ordered
   */
  protected static final BigDecimal MIN_IMPROVEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinImprovement() <em>Min Improvement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinImprovement()
   * @generated
   * @ordered
   */
  protected BigDecimal minImprovement = MIN_IMPROVEMENT_EDEFAULT;

  /**
   * The default value of the '{@link #isHasMaxDegression() <em>Has Max Degression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasMaxDegression()
   * @generated
   * @ordered
   */
  protected static final boolean HAS_MAX_DEGRESSION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isHasMaxDegression() <em>Has Max Degression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasMaxDegression()
   * @generated
   * @ordered
   */
  protected boolean hasMaxDegression = HAS_MAX_DEGRESSION_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxDegression() <em>Max Degression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxDegression()
   * @generated
   * @ordered
   */
  protected static final BigDecimal MAX_DEGRESSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMaxDegression() <em>Max Degression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxDegression()
   * @generated
   * @ordered
   */
  protected BigDecimal maxDegression = MAX_DEGRESSION_EDEFAULT;

  /**
   * The default value of the '{@link #isHaxMaxThings() <em>Hax Max Things</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHaxMaxThings()
   * @generated
   * @ordered
   */
  protected static final boolean HAX_MAX_THINGS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isHaxMaxThings() <em>Hax Max Things</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHaxMaxThings()
   * @generated
   * @ordered
   */
  protected boolean haxMaxThings = HAX_MAX_THINGS_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxThings() <em>Max Things</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxThings()
   * @generated
   * @ordered
   */
  protected static final int MAX_THINGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxThings() <em>Max Things</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxThings()
   * @generated
   * @ordered
   */
  protected int maxThings = MAX_THINGS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConfigImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EcssLanguagePackage.Literals.CONFIG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isHasMinImprovement()
  {
    return hasMinImprovement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHasMinImprovement(boolean newHasMinImprovement)
  {
    boolean oldHasMinImprovement = hasMinImprovement;
    hasMinImprovement = newHasMinImprovement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.CONFIG__HAS_MIN_IMPROVEMENT, oldHasMinImprovement, hasMinImprovement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BigDecimal getMinImprovement()
  {
    return minImprovement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinImprovement(BigDecimal newMinImprovement)
  {
    BigDecimal oldMinImprovement = minImprovement;
    minImprovement = newMinImprovement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.CONFIG__MIN_IMPROVEMENT, oldMinImprovement, minImprovement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isHasMaxDegression()
  {
    return hasMaxDegression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHasMaxDegression(boolean newHasMaxDegression)
  {
    boolean oldHasMaxDegression = hasMaxDegression;
    hasMaxDegression = newHasMaxDegression;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.CONFIG__HAS_MAX_DEGRESSION, oldHasMaxDegression, hasMaxDegression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BigDecimal getMaxDegression()
  {
    return maxDegression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxDegression(BigDecimal newMaxDegression)
  {
    BigDecimal oldMaxDegression = maxDegression;
    maxDegression = newMaxDegression;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.CONFIG__MAX_DEGRESSION, oldMaxDegression, maxDegression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isHaxMaxThings()
  {
    return haxMaxThings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHaxMaxThings(boolean newHaxMaxThings)
  {
    boolean oldHaxMaxThings = haxMaxThings;
    haxMaxThings = newHaxMaxThings;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.CONFIG__HAX_MAX_THINGS, oldHaxMaxThings, haxMaxThings));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMaxThings()
  {
    return maxThings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxThings(int newMaxThings)
  {
    int oldMaxThings = maxThings;
    maxThings = newMaxThings;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.CONFIG__MAX_THINGS, oldMaxThings, maxThings));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.CONFIG__HAS_MIN_IMPROVEMENT:
        return isHasMinImprovement();
      case EcssLanguagePackage.CONFIG__MIN_IMPROVEMENT:
        return getMinImprovement();
      case EcssLanguagePackage.CONFIG__HAS_MAX_DEGRESSION:
        return isHasMaxDegression();
      case EcssLanguagePackage.CONFIG__MAX_DEGRESSION:
        return getMaxDegression();
      case EcssLanguagePackage.CONFIG__HAX_MAX_THINGS:
        return isHaxMaxThings();
      case EcssLanguagePackage.CONFIG__MAX_THINGS:
        return getMaxThings();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.CONFIG__HAS_MIN_IMPROVEMENT:
        setHasMinImprovement((Boolean)newValue);
        return;
      case EcssLanguagePackage.CONFIG__MIN_IMPROVEMENT:
        setMinImprovement((BigDecimal)newValue);
        return;
      case EcssLanguagePackage.CONFIG__HAS_MAX_DEGRESSION:
        setHasMaxDegression((Boolean)newValue);
        return;
      case EcssLanguagePackage.CONFIG__MAX_DEGRESSION:
        setMaxDegression((BigDecimal)newValue);
        return;
      case EcssLanguagePackage.CONFIG__HAX_MAX_THINGS:
        setHaxMaxThings((Boolean)newValue);
        return;
      case EcssLanguagePackage.CONFIG__MAX_THINGS:
        setMaxThings((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.CONFIG__HAS_MIN_IMPROVEMENT:
        setHasMinImprovement(HAS_MIN_IMPROVEMENT_EDEFAULT);
        return;
      case EcssLanguagePackage.CONFIG__MIN_IMPROVEMENT:
        setMinImprovement(MIN_IMPROVEMENT_EDEFAULT);
        return;
      case EcssLanguagePackage.CONFIG__HAS_MAX_DEGRESSION:
        setHasMaxDegression(HAS_MAX_DEGRESSION_EDEFAULT);
        return;
      case EcssLanguagePackage.CONFIG__MAX_DEGRESSION:
        setMaxDegression(MAX_DEGRESSION_EDEFAULT);
        return;
      case EcssLanguagePackage.CONFIG__HAX_MAX_THINGS:
        setHaxMaxThings(HAX_MAX_THINGS_EDEFAULT);
        return;
      case EcssLanguagePackage.CONFIG__MAX_THINGS:
        setMaxThings(MAX_THINGS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.CONFIG__HAS_MIN_IMPROVEMENT:
        return hasMinImprovement != HAS_MIN_IMPROVEMENT_EDEFAULT;
      case EcssLanguagePackage.CONFIG__MIN_IMPROVEMENT:
        return MIN_IMPROVEMENT_EDEFAULT == null ? minImprovement != null : !MIN_IMPROVEMENT_EDEFAULT.equals(minImprovement);
      case EcssLanguagePackage.CONFIG__HAS_MAX_DEGRESSION:
        return hasMaxDegression != HAS_MAX_DEGRESSION_EDEFAULT;
      case EcssLanguagePackage.CONFIG__MAX_DEGRESSION:
        return MAX_DEGRESSION_EDEFAULT == null ? maxDegression != null : !MAX_DEGRESSION_EDEFAULT.equals(maxDegression);
      case EcssLanguagePackage.CONFIG__HAX_MAX_THINGS:
        return haxMaxThings != HAX_MAX_THINGS_EDEFAULT;
      case EcssLanguagePackage.CONFIG__MAX_THINGS:
        return maxThings != MAX_THINGS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (hasMinImprovement: ");
    result.append(hasMinImprovement);
    result.append(", minImprovement: ");
    result.append(minImprovement);
    result.append(", hasMaxDegression: ");
    result.append(hasMaxDegression);
    result.append(", maxDegression: ");
    result.append(maxDegression);
    result.append(", haxMaxThings: ");
    result.append(haxMaxThings);
    result.append(", maxThings: ");
    result.append(maxThings);
    result.append(')');
    return result.toString();
  }

} //ConfigImpl
