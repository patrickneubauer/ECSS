/*
 * generated by Xtext 2.19.0
 */
package srclang.com.puppetlabs.geppetto.pp.dsl1.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import pp1.ExprList
import pp1.PuppetManifest
import srclang.com.puppetlabs.geppetto.pp.dsl1.services.PPGrammarAccess

class PPFormatter extends AbstractFormatter2 {
	
	@Inject extension PPGrammarAccess

	def dispatch void format(PuppetManifest puppetManifest, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (expression : puppetManifest.statements) {
			expression.format
		}
	}

	def dispatch void format(ExprList exprList, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (expression : exprList.expressions) {
			expression.format
		}
	}
	
	// TODO: implement for RelationshipExpression, ResourceExpression, ResourceBody, AttributeOperation, AttributeOperations, AssignmentExpression, AppendExpression, OrExpression, AndExpression, RelationalExpression, EqualityExpression, ShiftExpression, AdditiveExpression, MultiplicativeExpression, MatchingExpression, InExpression, UnaryMinusExpression, UnaryNotExpression, CollectExpression, VirtualCollectQuery, ExportedCollectQuery, SelectorExpression, SelectorEntry, AtExpression, MethodCall, JavaLambda, RubyLambda, DefinitionArgumentList, FunctionCall, NodeDefinition, HostClassDefinition, Definition, DefinitionArgument, CaseExpression, Case, UnlessExpression, IfExpression, ElseExpression, ElseIfExpression, ParenthesisedExpression, ImportExpression, LiteralList, LiteralHash, HashEntry, DoubleQuotedString, ExpressionTE, UnquotedString
}
