ApplicationPart RelationPart {
    
    Module relation {
        "Testing entity for different type of relations"
        Entity Person {
        	scaffold

        	String first;
        	String secondName;

        	// 1:N with backref
            - List<@House> owning <-> owner inverse;
            - Set<@House> related <-> relation inverse;
            - Bag<@House> other <-> something inverse;

        	// 1:N without backref
            - List<@House> owningUni inverse;
            - Set<@House> relatedUni inverse;
            - Bag<@House> otherUni inverse;

        	// N:M with backref
            - List<@House> owningN <-> ownerN;
            - Set<@House> relatedN <-> relationN;
            - Bag<@House> otherN <-> somethingN;

        	// N:M without backref
            - List<@House> owningUniN;
            - Set<@House> relatedUniN;
            - Bag<@House> otherUniN;

            Repository PersonRepository {
				PagedResult findByCondition(PagingParameter pagingParameter);
            }
        }

        Entity House {
        	String name;
        	String street;
        	String number;
        	String town;
        	String state;
        	String zipCode;
        	Integer landFieldSize nullable;
        	Integer houseFootprint nullable;
        	Integer numberOfFloors nullable;
        	- @Person owner <-> owning nullable;
        	- @Person relation <-> related nullable;
        	- @Person something <-> other nullable;

        	- Set<@Person> ownerN <-> owningN;
        	- List<@Person> relationN <-> relatedN;
        	- Bag<@Person> somethingN <-> otherN;
        }
    }
}