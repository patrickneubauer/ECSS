// automatically generated by Xtext
grammar deflang.com.temenos.interaction.rimdsl.RIMDsl with org.eclipse.xtext.common.Terminals

import "http://www.com.trglang/temenos/interaction/rimdsl/RIMDsl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DomainModel returns DomainModel:
	{DomainModel}
	'DomainModel'
	'{'
		('rims' '{' rims+=Ref ( "," rims+=Ref)* '}' )?
	'}';

Ref returns Ref:
	Ref_Impl | DomainDeclaration | Use | ResourceInteractionModel;











RelationRef returns RelationRef:
	RelationRef_Impl | RelationConstant;


TransitionRef returns TransitionRef:
	TransitionRef_Impl | Transition | TransitionForEach | TransitionEmbeddedForEach | TransitionAuto | TransitionRedirect | TransitionEmbedded;











Function returns Function:
	Function_Impl | Function_OK_Impl | Function_NOT_FOUND_Impl | OKFunction | NotFoundFunction;


Ref_Impl returns Ref:
	{Ref}
	'Ref'
	;

DomainDeclaration returns DomainDeclaration:
	{DomainDeclaration}
	'DomainDeclaration'
	name=EString
	'{'
		('annotations' '{' annotations+=MdfAnnotation ( "," annotations+=MdfAnnotation)* '}' )?
		('rims' '{' rims+=Ref ( "," rims+=Ref)* '}' )?
	'}';

Use returns Use:
	{Use}
	'Use'
	'{'
		('importedNamespace' importedNamespace=EString)?
	'}';

ResourceInteractionModel returns ResourceInteractionModel:
	{ResourceInteractionModel}
	'ResourceInteractionModel'
	name=EString
	'{'
		('annotations' '{' annotations+=MdfAnnotation ( "," annotations+=MdfAnnotation)* '}' )?
		('events' '{' events+=Event ( "," events+=Event)* '}' )?
		('commands' '{' commands+=Command ( "," commands+=Command)* '}' )?
		('basepath' basepath=BasePath)?
		('relations' '{' relations+=Relation ( "," relations+=Relation)* '}' )?
		('states' '{' states+=State ( "," states+=State)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

MdfAnnotation returns MdfAnnotation:
	{MdfAnnotation}
	'MdfAnnotation'
	name=EString
	'{'
		('namespace' namespace=EString)?
		('properties' '{' properties+=EString ( "," properties+=EString)* '}' )?
	'}';

Event returns Event:
	{Event}
	'Event'
	name=EString
	'{'
		('httpMethod' httpMethod=EString)?
		('annotations' '{' annotations+=MdfAnnotation ( "," annotations+=MdfAnnotation)* '}' )?
	'}';

Command returns Command:
	{Command}
	'Command'
	name=EString
	'{'
		('spec' spec=CommandSpec)?
	'}';

BasePath returns BasePath:
	{BasePath}
	'BasePath'
	name=EString;

Relation returns Relation:
	{Relation}
	'Relation'
	name=EString
	'{'
		('fqn' fqn=EString)?
		('description' description=EString)?
	'}';

State returns State:
	{State}
	(isInitial?='isInitial')?
	(isException?='isException')?
	'State'
	name=EString
	'{'
		('cache' cache=EInt)?
		('errorState' errorState=[State|EString])?
		('annotations' '{' annotations+=MdfAnnotation ( "," annotations+=MdfAnnotation)* '}' )?
		('type' type=ResourceType)?
		('entity' entity=Entity)?
		('impl' impl=ImplRef)?
		('relations' '{' relations+=RelationRef ( "," relations+=RelationRef)* '}' )?
		('path' path=Path)?
		('transitions' '{' transitions+=TransitionRef ( "," transitions+=TransitionRef)* '}' )?
	'}';

CommandSpec returns CommandSpec:
	{CommandSpec}
	'CommandSpec'
	'{'
		('properties' '{' properties+=CommandProperty ( "," properties+=CommandProperty)* '}' )?
	'}';

CommandProperty returns CommandProperty:
	{CommandProperty}
	'CommandProperty'
	name=EString
	'{'
		('value' value=EString)?
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

ResourceType returns ResourceType:
	{ResourceType}
	(isCollection?='isCollection')?
	(isItem?='isItem')?
	'ResourceType'
	;

Entity returns Entity:
	{Entity}
	'Entity'
	name=EString;

ImplRef returns ImplRef:
	{ImplRef}
	'ImplRef'
	'{'
		('view' view=ResourceCommand)?
		('actions' '{' actions+=ResourceCommand ( "," actions+=ResourceCommand)* '}' )?
		('methods' '{' methods+=MethodRef ( "," methods+=MethodRef)* '}' )?
	'}';

RelationRef_Impl returns RelationRef:
	{RelationRef}
	'RelationRef'
	'{'
		('relation' relation=[Relation|EString])?
	'}';

Path returns Path:
	{Path}
	'Path'
	name=EString;

TransitionRef_Impl returns TransitionRef:
	{TransitionRef}
	'TransitionRef'
	name=EString
	'{'
		('event' event=[Event|EString])?
		('state' state=[State|EString])?
		('locator' locator=ResourceLocator)?
		('spec' spec=TransitionSpec)?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

ResourceCommand returns ResourceCommand:
	{ResourceCommand}
	'ResourceCommand'
	'{'
		('command' command=[Command|EString])?
		('properties' '{' properties+=CommandProperty ( "," properties+=CommandProperty)* '}' )?
	'}';

MethodRef returns MethodRef:
	{MethodRef}
	'MethodRef'
	'{'
		('event' event=[Event|EString])?
		('command' command=ResourceCommand)?
	'}';

RelationConstant returns RelationConstant:
	{RelationConstant}
	'RelationConstant'
	name=EString
	'{'
		('relation' relation=[Relation|EString])?
	'}';

ResourceLocator returns ResourceLocator:
	{ResourceLocator}
	'ResourceLocator'
	name=EString
	'{'
		('args' '{' args+=EString ( "," args+=EString)* '}' )?
	'}';

TransitionSpec returns TransitionSpec:
	{TransitionSpec}
	'TransitionSpec'
	'{'
		('eval' eval=Expression)?
		('uriLinks' '{' uriLinks+=UriLink ( "," uriLinks+=UriLink)* '}' )?
		('title' title=Title)?
		('id' id=LinkId)?
		('field' field=SourceField)?
	'}';

Transition returns Transition:
	{Transition}
	'Transition'
	name=EString
	'{'
		('event' event=[Event|EString])?
		('state' state=[State|EString])?
		('locator' locator=ResourceLocator)?
		('spec' spec=TransitionSpec)?
	'}';

TransitionForEach returns TransitionForEach:
	{TransitionForEach}
	'TransitionForEach'
	name=EString
	'{'
		('event' event=[Event|EString])?
		('state' state=[State|EString])?
		('locator' locator=ResourceLocator)?
		('spec' spec=TransitionSpec)?
	'}';

TransitionEmbeddedForEach returns TransitionEmbeddedForEach:
	{TransitionEmbeddedForEach}
	'TransitionEmbeddedForEach'
	name=EString
	'{'
		('event' event=[Event|EString])?
		('state' state=[State|EString])?
		('locator' locator=ResourceLocator)?
		('spec' spec=TransitionSpec)?
	'}';

TransitionAuto returns TransitionAuto:
	{TransitionAuto}
	'TransitionAuto'
	name=EString
	'{'
		('event' event=[Event|EString])?
		('state' state=[State|EString])?
		('locator' locator=ResourceLocator)?
		('spec' spec=TransitionSpec)?
	'}';

TransitionRedirect returns TransitionRedirect:
	{TransitionRedirect}
	'TransitionRedirect'
	name=EString
	'{'
		('event' event=[Event|EString])?
		('state' state=[State|EString])?
		('locator' locator=ResourceLocator)?
		('spec' spec=TransitionSpec)?
	'}';

TransitionEmbedded returns TransitionEmbedded:
	{TransitionEmbedded}
	'TransitionEmbedded'
	name=EString
	'{'
		('event' event=[Event|EString])?
		('state' state=[State|EString])?
		('locator' locator=ResourceLocator)?
		('spec' spec=TransitionSpec)?
	'}';

Expression returns Expression:
	{Expression}
	'Expression'
	'{'
		('expressions' '{' expressions+=Function ( "," expressions+=Function)* '}' )?
	'}';

UriLink returns UriLink:
	{UriLink}
	'UriLink'
	'{'
		('templateProperty' templateProperty=EString)?
		('entityProperty' entityProperty=UriLinkage)?
	'}';

Title returns Title:
	{Title}
	'Title'
	name=EString;

LinkId returns LinkId:
	{LinkId}
	'LinkId'
	name=EString;

SourceField returns SourceField:
	{SourceField}
	'SourceField'
	name=EString;

Function_Impl returns Function:
	{Function}
	'Function'
	;

Function_OK_Impl returns Function_OK:
	{Function_OK}
	'Function_OK'
	;

Function_NOT_FOUND_Impl returns Function_NOT_FOUND:
	{Function_NOT_FOUND}
	'Function_NOT_FOUND'
	;

OKFunction returns OKFunction:
	{OKFunction}
	'OKFunction'
	'{'
		('state' state=[State|EString])?
	'}';

NotFoundFunction returns NotFoundFunction:
	{NotFoundFunction}
	'NotFoundFunction'
	'{'
		('state' state=[State|EString])?
	'}';

UriLinkage returns UriLinkage:
	{UriLinkage}
	'UriLinkage'
	name=EString;
