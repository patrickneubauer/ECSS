/*
 * generated by Xtext 2.19.0
 */
package deflang.com.github.jknack.antlr4ide.formatting2

import antlr4.Grammar
import antlr4.Mode
import com.google.inject.Inject
import deflang.com.github.jknack.antlr4ide.services.Antlr4GrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class Antlr4Formatter extends AbstractFormatter2 {
	
	@Inject extension Antlr4GrammarAccess

	def dispatch void format(Grammar grammar, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (prequelConstruct : grammar.prequels) {
			prequelConstruct.format
		}
		for (rule : grammar.rules) {
			rule.format
		}
		for (mode : grammar.modes) {
			mode.format
		}
	}

	def dispatch void format(Mode mode, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (lexerRule : mode.rules) {
			lexerRule.format
		}
	}
	
	// TODO: implement for Options, Imports, V4Tokens, V3Tokens, Option, TokenVocab, QualifiedOption, ParserRule, LexerRule, Exceptions, RuleBlock, ExceptionGroup, RuleAltList, LabeledAlt, Alternative, ElementOptions, Element, ElementOption, LexerRuleBlock, LexerAltList, LexerAlt, LexerElements, LexerCommands, LexerElement, LexerCommand
}
