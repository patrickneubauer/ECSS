/**
 *
 * $Id$
 */
package sculptordsl.validation;

import org.eclipse.emf.common.util.EList;

import sculptordsl.DslAttribute;
import sculptordsl.DslDiscriminatorType;
import sculptordsl.DslDomainObject;
import sculptordsl.DslDomainObjectOperation;
import sculptordsl.DslInheritanceType;
import sculptordsl.DslReference;
import sculptordsl.DslRepository;
import sculptordsl.DslTrait;

/**
 * A sample validator interface for {@link sculptordsl.DslDomainObject}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DslDomainObjectValidator {
	boolean validate();

	boolean validateAbstract(boolean value);
	boolean validateExtendsName(String value);
	boolean validateTraits(EList<DslTrait> value);
	boolean validateCache(boolean value);
	boolean validateGapClass(boolean value);
	boolean validateNoGapClass(boolean value);
	boolean validateScaffold(boolean value);
	boolean validateDatabaseTable(String value);
	boolean validateDiscriminatorValue(String value);
	boolean validateDiscriminatorColumn(String value);
	boolean validateDiscriminatorType(DslDiscriminatorType value);
	boolean validateDiscriminatorLength(String value);
	boolean validateInheritanceType(DslInheritanceType value);
	boolean validateValidate(String value);
	boolean validateNotAggregateRoot(boolean value);
	boolean validateBelongsTo(DslDomainObject value);
	boolean validateAttributes(EList<DslAttribute> value);
	boolean validateReferences(EList<DslReference> value);
	boolean validateOperations(EList<DslDomainObjectOperation> value);
	boolean validateRepository(DslRepository value);
}
