/*
 * generated by Xtext 2.19.0
 */
package trglang.com.puppetlabs.geppetto.pp.dsl1.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import pp1.CaseExpression
import pp1.ExpressionTE
import trglang.com.puppetlabs.geppetto.pp.dsl1.services.PPGrammarAccess

class PPFormatter extends AbstractFormatter2 {
	
	@Inject extension PPGrammarAccess

	def dispatch void format(ExpressionTE expressionTE, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		expressionTE.expression.format
	}

	def dispatch void format(CaseExpression caseExpression, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		caseExpression.switchExpr.format
		for (_case : caseExpression.cases) {
			_case.format
		}
	}
	
	// TODO: implement for NodeDefinition, CollectExpression, ResourceExpression, UnlessExpression, ParenthesisedExpression, ImportExpression, ExprList, VirtualCollectQuery, UnaryMinusExpression, UnaryNotExpression, ExportedCollectQuery, ElseExpression, PuppetManifest, UnquotedString, DoubleQuotedString, HostClassDefinition, LiteralHash, LiteralList, ResourceBody, ElseIfExpression, SelectorEntry, AssignmentExpression, AndExpression, NamedAccessExpression, AppendExpression, OrExpression, AttributeOperations, Case, SelectorExpression, AtExpression, JavaLambda, RubyLambda, DefinitionArgumentList, HashEntry, AttributeOperation, MultiplicativeExpression, RelationshipExpression, InExpression, ShiftExpression, RelationalExpression, MatchingExpression, AdditiveExpression, EqualityExpression, MethodCall, FunctionCall, DefinitionArgument
}
