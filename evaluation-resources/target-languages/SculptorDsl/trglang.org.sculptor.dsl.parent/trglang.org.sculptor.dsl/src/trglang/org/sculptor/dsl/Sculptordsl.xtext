// automatically generated by ECSS
grammar trglang.org.sculptor.dsl.Sculptordsl with org.eclipse.xtext.common.Terminals

import "http://www.org.srclang/sculptor/dsl/Sculptordsl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DslModel:
	{DslModel} "DslModel" "{" (imports+=DslImport ("," imports+=DslImport)*)? app=DslApplication? "}";

DslImport:
	{DslImport} "DslImport" "{" importURI=ESTRING? "}";

DslApplication:
	{DslApplication} "DslApplication" name=IDDT? "{" doc=ESTRING? basePackage=ESTRING? (modules+=DslModule (","
	modules+=DslModule)*)? "}";

terminal ESTRING:
	"\"" ("\\" . | !("\\" | "\""))* "\"" | "\'" ("\\" . | !("\\" | "\'"))* "\'";

DslModule:
	{DslModule} "DslModule" name=IDDT? "{" doc=ESTRING? external?=EBOOLEAN? basePackage=ESTRING? hint=ESTRING?
	(services+=DslService ("," services+=DslService)*)? (resources+=DslResource ("," resources+=DslResource)*)?
	(consumers+=DslConsumer ("," consumers+=DslConsumer)*)? (domainObjects+=DslSimpleDomainObject (","
	domainObjects+=DslSimpleDomainObject)*)? "}";

DslService:
	{DslService} "DslService" name=IDDT? "{" doc=ESTRING? gapClass?=EBOOLEAN? noGapClass?=EBOOLEAN? hint=ESTRING?
	subscribe=DslSubscribe? (dependencies+=DslDependency ("," dependencies+=DslDependency)*)? webService?=EBOOLEAN?
	(operations+=DslServiceOperation ("," operations+=DslServiceOperation)*)? "}";

terminal EBOOLEAN returns ecore::EBoolean:
	"true" | "false";

DslSimpleDomainObject:
	DslDomainObject | DslDataTransferObject | DslBasicType | DslEnum | DslTrait;

DslResource:
	{DslResource} "DslResource" name=IDDT? "{" doc=ESTRING? gapClass?=EBOOLEAN? noGapClass?=EBOOLEAN? hint=ESTRING?
	scaffold?=EBOOLEAN? path=ESTRING? (dependencies+=DslServiceDependency ("," dependencies+=DslServiceDependency)*)?
	(operations+=DslResourceOperation ("," operations+=DslResourceOperation)*)? "}";

DslConsumer:
	{DslConsumer} "DslConsumer" name=IDDT? "{" doc=ESTRING? hint=ESTRING? (dependencies+=DslDependency (","
	dependencies+=DslDependency)*)? messageRoot=[DslDomainObject|IDDT]? channel=ESTRING? subscribe=DslSubscribe? "}";

DslSubscribe:
	{DslSubscribe} "DslSubscribe" "{" topic=ESTRING? eventBus=ESTRING? "}";

DslServiceOperation:
	{DslServiceOperation} "DslServiceOperation" visibility=DslVisibility? "{" doc=ESTRING? returnType=DslComplexType? name=ESTRING?
	(parameters+=DslParameter ("," parameters+=DslParameter)*)? throws=ESTRING? hint=ESTRING? publish=DslPublish?
	delegateHolder=DslServiceOperationDelegate? "}";

DslDependency:
	{DslDependency} "DslDependency" name=IDDT? "{" dependency=[DslServiceRepositoryOption|IDDT]? "}";

DslDataTransferObject:
	{DslDataTransferObject} "DslDataTransferObject" name=IDDT? "{" doc=ESTRING? package=ESTRING? hint=ESTRING?
	abstract?=EBOOLEAN? extends=[DslDataTransferObject|IDDT]? extendsName=ESTRING? gapClass?=EBOOLEAN?
	noGapClass?=EBOOLEAN? validate=ESTRING? (attributes+=DslDtoAttribute ("," attributes+=DslDtoAttribute)*)?
	(references+=DslDtoReference ("," references+=DslDtoReference)*)? "}";

DslBasicType:
	{DslBasicType} "DslBasicType" name=IDDT? "{" doc=ESTRING? package=ESTRING? hint=ESTRING? (traits+=[DslTrait|IDDT] (","
	traits+=[DslTrait|IDDT])*)? notImmutable?=EBOOLEAN? gapClass?=EBOOLEAN? noGapClass?=EBOOLEAN?
	(attributes+=DslAttribute ("," attributes+=DslAttribute)*)? (references+=DslReference (","
	references+=DslReference)*)? (operations+=DslDomainObjectOperation ("," operations+=DslDomainObjectOperation)*)? "}";

DslDomainObject:
	DslEntity | DslEvent | DslValueObject;

DslTrait:
	{DslTrait} "DslTrait" name=IDDT? "{" doc=ESTRING? package=ESTRING? hint=ESTRING? (attributes+=DslAttribute (","
	attributes+=DslAttribute)*)? (references+=DslReference ("," references+=DslReference)*)?
	(operations+=DslDomainObjectOperation ("," operations+=DslDomainObjectOperation)*)? "}";

DslEnum:
	{DslEnum} "DslEnum" name=IDDT? "{" doc=ESTRING? package=ESTRING? hint=ESTRING? ordinal?=EBOOLEAN?
	(attributes+=DslEnumAttribute ("," attributes+=DslEnumAttribute)*)? (values+=DslEnumValue (","
	values+=DslEnumValue)*)? "}";

DslResourceOperation:
	{DslResourceOperation} "DslResourceOperation" visibility=DslVisibility? "{" doc=ESTRING? returnType=DslComplexType?
	name=ESTRING? (parameters+=DslParameter ("," parameters+=DslParameter)*)? throws=ESTRING? hint=ESTRING?
	httpMethod=DslHttpMethod? path=ESTRING? returnString=ESTRING? delegateHolder=DslResourceOperationDelegate? "}";

DslServiceDependency:
	{DslServiceDependency} "DslServiceDependency" "{" dependency=[DslService|IDDT]? "}";

DslPublish:
	{DslPublish} "DslPublish" "{" eventType=[DslEvent|IDDT]? topic=ESTRING? eventBus=ESTRING? "}";

DslParameter:
	{DslParameter} "DslParameter" name=IDDT? "{" doc=ESTRING? parameterType=DslComplexType? "}";

DslServiceOperationDelegate:
	{DslServiceOperationDelegate} "DslServiceOperationDelegate" "{" delegate=[DslServiceRepositoryOption|IDDT]?
	delegateOperation=[DslServiceRepositoryOperationOption|IDDT]? "}";

DslComplexType:
	{DslComplexType} "DslComplexType" collectionType=DslCollectionType? "{" domainObjectType=[DslSimpleDomainObject|IDDT]?
	type=ESTRING? mapCollectionType=ESTRING? mapKeyType=ESTRING? mapKeyDomainObjectType=[DslSimpleDomainObject|IDDT]? "}";

enum DslCollectionType :
  None | Set="Set" | List="List" | Bag="Bag" | Collection="Collection";

DslServiceRepositoryOption:
	DslService | DslRepository;

DslEnumValue:
	{DslEnumValue} "DslEnumValue" name=IDDT? "{" doc=ESTRING? (parameters+=DslEnumParameter (","
	parameters+=DslEnumParameter)*)? "}";

DslEnumAttribute:
	{DslEnumAttribute} "DslEnumAttribute" name=IDDT? "{" doc=ESTRING? type=ESTRING? key?=EBOOLEAN? "}";

DslAttribute:
	{DslAttribute} "DslAttribute" visibility=DslVisibility? "{" doc=ESTRING? collectionType=DslCollectionType? name=ESTRING?
	key?=EBOOLEAN? notChangeable?=EBOOLEAN? required?=EBOOLEAN? nullable?=EBOOLEAN? nullableMessage=ESTRING? hint=ESTRING?
	notEmpty?=EBOOLEAN? notEmptyMessage=ESTRING? size=ESTRING? validate=ESTRING? transient?=EBOOLEAN?
	databaseColumn=ESTRING? type=ESTRING? index?=EBOOLEAN? assertFalse?=EBOOLEAN? assertFalseMessage=ESTRING?
	assertTrue?=EBOOLEAN? assertTrueMessage=ESTRING? creditCardNumber?=EBOOLEAN? creditCardNumberMessage=ESTRING?
	digits=ESTRING? email?=EBOOLEAN? emailMessage=ESTRING? future?=EBOOLEAN? futureMessage=ESTRING? past?=EBOOLEAN?
	pastMessage=ESTRING? max=ESTRING? min=ESTRING? decimalMax=ESTRING? decimalMin=ESTRING? notBlank?=EBOOLEAN?
	notBlankMessage=ESTRING? pattern=ESTRING? range=ESTRING? length=ESTRING? scriptAssert=ESTRING? url=ESTRING?
	databaseType=ESTRING? "}";

DslReference:
	{DslReference} "DslReference" visibility=DslVisibility? "{" doc=ESTRING? collectionType=DslCollectionType? name=ESTRING?
	key?=EBOOLEAN? notChangeable?=EBOOLEAN? required?=EBOOLEAN? nullable?=EBOOLEAN? nullableMessage=ESTRING? hint=ESTRING?
	notEmpty?=EBOOLEAN? notEmptyMessage=ESTRING? size=ESTRING? validate=ESTRING? transient?=EBOOLEAN?
	databaseColumn=ESTRING? domainObjectType=[DslSimpleDomainObject|IDDT]? cascade=ESTRING? fetch=ESTRING?
	cache?=EBOOLEAN? inverse?=EBOOLEAN? databaseJoinTable=ESTRING? databaseJoinColumn=ESTRING? valid?=EBOOLEAN?
	validMessage=ESTRING? orderBy=ESTRING? orderColumn?=EBOOLEAN? orderColumnName=ESTRING?
	oppositeHolder=DslOppositeHolder? "}";

DslDomainObjectOperation:
	{DslDomainObjectOperation} "DslDomainObjectOperation" visibility=DslVisibility? "{" doc=ESTRING? abstract?=EBOOLEAN?
	returnType=DslComplexType? name=ESTRING? (parameters+=DslParameter ("," parameters+=DslParameter)*)? throws=ESTRING?
	hint=ESTRING? "}";

DslEvent:
	DslDomainEvent | DslCommandEvent;

DslEntity:
	{DslEntity} "DslEntity" name=IDDT? "{" doc=ESTRING? package=ESTRING? hint=ESTRING? abstract?=EBOOLEAN?
	extendsName=ESTRING? (traits+=[DslTrait|IDDT] ("," traits+=[DslTrait|IDDT])*)? cache?=EBOOLEAN? gapClass?=EBOOLEAN?
	noGapClass?=EBOOLEAN? scaffold?=EBOOLEAN? databaseTable=ESTRING? discriminatorValue=ESTRING?
	discriminatorColumn=ESTRING? discriminatorType=DslDiscriminatorType? discriminatorLength=ESTRING?
	inheritanceType=DslInheritanceType? validate=ESTRING? notAggregateRoot?=EBOOLEAN? belongsTo=[DslDomainObject|IDDT]?
	(attributes+=DslAttribute ("," attributes+=DslAttribute)*)? (references+=DslReference (","
	references+=DslReference)*)? (operations+=DslDomainObjectOperation ("," operations+=DslDomainObjectOperation)*)?
	repository=DslRepository? extends=[DslEntity|IDDT]? notOptimisticLocking?=EBOOLEAN? notAuditable?=EBOOLEAN? "}";

DslValueObject:
	{DslValueObject} "DslValueObject" name=IDDT? "{" doc=ESTRING? package=ESTRING? hint=ESTRING? abstract?=EBOOLEAN?
	extendsName=ESTRING? (traits+=[DslTrait|IDDT] ("," traits+=[DslTrait|IDDT])*)? cache?=EBOOLEAN? gapClass?=EBOOLEAN?
	noGapClass?=EBOOLEAN? scaffold?=EBOOLEAN? databaseTable=ESTRING? discriminatorValue=ESTRING?
	discriminatorColumn=ESTRING? discriminatorType=DslDiscriminatorType? discriminatorLength=ESTRING?
	inheritanceType=DslInheritanceType? validate=ESTRING? notAggregateRoot?=EBOOLEAN? belongsTo=[DslDomainObject|IDDT]?
	(attributes+=DslAttribute ("," attributes+=DslAttribute)*)? (references+=DslReference (","
	references+=DslReference)*)? (operations+=DslDomainObjectOperation ("," operations+=DslDomainObjectOperation)*)?
	repository=DslRepository? extends=[DslValueObject|IDDT]? notOptimisticLocking?=EBOOLEAN? notImmutable?=EBOOLEAN?
	persistent?=EBOOLEAN? notPersistent?=EBOOLEAN? "}";

DslDtoReference:
	{DslDtoReference} "DslDtoReference" visibility=DslVisibility? "{" doc=ESTRING? collectionType=DslCollectionType? name=ESTRING?
	key?=EBOOLEAN? notChangeable?=EBOOLEAN? required?=EBOOLEAN? nullable?=EBOOLEAN? nullableMessage=ESTRING? hint=ESTRING?
	notEmpty?=EBOOLEAN? notEmptyMessage=ESTRING? size=ESTRING? validate=ESTRING? transient?=EBOOLEAN?
	domainObjectType=[DslSimpleDomainObject|IDDT]? valid?=EBOOLEAN? validMessage=ESTRING? "}";

DslDtoAttribute:
	{DslDtoAttribute} "DslDtoAttribute" visibility=DslVisibility? "{" doc=ESTRING? collectionType=DslCollectionType? name=ESTRING?
	key?=EBOOLEAN? notChangeable?=EBOOLEAN? required?=EBOOLEAN? nullable?=EBOOLEAN? nullableMessage=ESTRING? hint=ESTRING?
	notEmpty?=EBOOLEAN? notEmptyMessage=ESTRING? size=ESTRING? validate=ESTRING? transient?=EBOOLEAN? type=ESTRING?
	assertFalse?=EBOOLEAN? assertFalseMessage=ESTRING? assertTrue?=EBOOLEAN? assertTrueMessage=ESTRING?
	creditCardNumber?=EBOOLEAN? creditCardNumberMessage=ESTRING? digits=ESTRING? email?=EBOOLEAN? emailMessage=ESTRING?
	future?=EBOOLEAN? futureMessage=ESTRING? past?=EBOOLEAN? pastMessage=ESTRING? max=ESTRING? min=ESTRING?
	decimalMax=ESTRING? decimalMin=ESTRING? notBlank?=EBOOLEAN? notBlankMessage=ESTRING? pattern=ESTRING? range=ESTRING?
	length=ESTRING? scriptAssert=ESTRING? url=ESTRING? "}";

enum DslHttpMethod:
	None | GET | POST | PUT | DELETE;

DslResourceOperationDelegate:
	{DslResourceOperationDelegate} "DslResourceOperationDelegate" "{" delegate=[DslService|IDDT]?
	delegateOperation=[DslServiceOperation|IDDT]? "}";

DslCommandEvent:
	{DslCommandEvent} "DslCommandEvent" name=IDDT? "{" doc=ESTRING? package=ESTRING? hint=ESTRING? abstract?=EBOOLEAN?
	extendsName=ESTRING? (traits+=[DslTrait|IDDT] ("," traits+=[DslTrait|IDDT])*)? cache?=EBOOLEAN? gapClass?=EBOOLEAN?
	noGapClass?=EBOOLEAN? scaffold?=EBOOLEAN? databaseTable=ESTRING? discriminatorValue=ESTRING?
	discriminatorColumn=ESTRING? discriminatorType=DslDiscriminatorType? discriminatorLength=ESTRING?
	inheritanceType=DslInheritanceType? validate=ESTRING? notAggregateRoot?=EBOOLEAN? belongsTo=[DslDomainObject|IDDT]?
	(attributes+=DslAttribute ("," attributes+=DslAttribute)*)? (references+=DslReference (","
	references+=DslReference)*)? (operations+=DslDomainObjectOperation ("," operations+=DslDomainObjectOperation)*)?
	repository=DslRepository? persistent?=EBOOLEAN? extends=[DslCommandEvent|IDDT]? "}";

DslDomainEvent:
	{DslDomainEvent} "DslDomainEvent" name=IDDT? "{" doc=ESTRING? package=ESTRING? hint=ESTRING? abstract?=EBOOLEAN?
	extendsName=ESTRING? (traits+=[DslTrait|IDDT] ("," traits+=[DslTrait|IDDT])*)? cache?=EBOOLEAN? gapClass?=EBOOLEAN?
	noGapClass?=EBOOLEAN? scaffold?=EBOOLEAN? databaseTable=ESTRING? discriminatorValue=ESTRING?
	discriminatorColumn=ESTRING? discriminatorType=DslDiscriminatorType? discriminatorLength=ESTRING?
	inheritanceType=DslInheritanceType? validate=ESTRING? notAggregateRoot?=EBOOLEAN? belongsTo=[DslDomainObject|IDDT]?
	(attributes+=DslAttribute ("," attributes+=DslAttribute)*)? (references+=DslReference (","
	references+=DslReference)*)? (operations+=DslDomainObjectOperation ("," operations+=DslDomainObjectOperation)*)?
	repository=DslRepository? persistent?=EBOOLEAN? extends=[DslDomainEvent|IDDT]? "}";

DslEnumParameter:
	{DslEnumParameter} "DslEnumParameter" "{" value=ESTRING? integerValue=EINT? "}";

DslOppositeHolder:
	{DslOppositeHolder} "DslOppositeHolder" "{" opposite=[DslReference|IDDT]? "}";

enum DslDiscriminatorType:
	STRING | CHAR | INTEGER;

enum DslInheritanceType:
	JOINED | SINGLE_TABLE;

DslRepository:
	{DslRepository} "DslRepository" name=IDDT? "{" doc=ESTRING? gapClass?=EBOOLEAN? noGapClass?=EBOOLEAN? hint=ESTRING?
	subscribe=DslSubscribe? (dependencies+=DslDependency ("," dependencies+=DslDependency)*)?
	(operations+=DslRepositoryOperation ("," operations+=DslRepositoryOperation)*)? "}";

DslServiceRepositoryOperationOption:
	DslServiceOperation | DslRepositoryOperation;

terminal EINT returns ecore::EInt:
	"0".."9"+;

DslRepositoryOperation:
	{DslRepositoryOperation} "DslRepositoryOperation" visibility=DslVisibility? "{" doc=ESTRING? returnType=DslComplexType?
	name=ESTRING? (parameters+=DslParameter ("," parameters+=DslParameter)*)? throws=ESTRING? hint=ESTRING?
	cache?=EBOOLEAN? gapOperation?=EBOOLEAN? noGapOperation?=EBOOLEAN? query=ESTRING? condition=ESTRING? select=ESTRING?
	groupBy=ESTRING? orderBy=ESTRING? construct?=EBOOLEAN? build?=EBOOLEAN? map?=EBOOLEAN? publish=DslPublish?
	delegateToAccessObject?=EBOOLEAN? accessObjectName=ESTRING? "}";

enum DslVisibility returns DslVisibility:
				public = 'public' | protected = 'protected' | private = 'private' | package = 'package';


IDDT:
	EBOOLEAN | ID;

terminal ID:
	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
