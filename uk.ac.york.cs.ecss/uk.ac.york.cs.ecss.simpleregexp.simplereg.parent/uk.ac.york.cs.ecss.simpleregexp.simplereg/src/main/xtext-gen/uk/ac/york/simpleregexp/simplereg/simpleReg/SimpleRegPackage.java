/**
 * generated by Xtext 2.15.0
 */
package uk.ac.york.simpleregexp.simplereg.simpleReg;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see uk.ac.york.simpleregexp.simplereg.simpleReg.SimpleRegFactory
 * @model kind="package"
 * @generated
 */
public interface SimpleRegPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "simpleReg";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.ac.uk/york/simpleregexp/simplereg/SimpleReg";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "simpleReg";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SimpleRegPackage eINSTANCE = uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl.init();

  /**
   * The meta object id for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.AbstractElementImpl <em>Abstract Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.AbstractElementImpl
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getAbstractElement()
   * @generated
   */
  int ABSTRACT_ELEMENT = 0;

  /**
   * The feature id for the '<em><b>Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT__CARDINALITY = 0;

  /**
   * The feature id for the '<em><b>Has Min Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT__HAS_MIN_CARD = 1;

  /**
   * The feature id for the '<em><b>Min Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT__MIN_CARDINALITY = 2;

  /**
   * The feature id for the '<em><b>Has Max Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT__HAS_MAX_CARD = 3;

  /**
   * The feature id for the '<em><b>Max Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT__MAX_CARDINALITY = 4;

  /**
   * The number of structural features of the '<em>Abstract Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SingleCharsImpl <em>Single Chars</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SingleCharsImpl
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getSingleChars()
   * @generated
   */
  int SINGLE_CHARS = 1;

  /**
   * The feature id for the '<em><b>Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_CHARS__CARDINALITY = ABSTRACT_ELEMENT__CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Min Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_CHARS__HAS_MIN_CARD = ABSTRACT_ELEMENT__HAS_MIN_CARD;

  /**
   * The feature id for the '<em><b>Min Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_CHARS__MIN_CARDINALITY = ABSTRACT_ELEMENT__MIN_CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Max Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_CHARS__HAS_MAX_CARD = ABSTRACT_ELEMENT__HAS_MAX_CARD;

  /**
   * The feature id for the '<em><b>Max Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_CHARS__MAX_CARDINALITY = ABSTRACT_ELEMENT__MAX_CARDINALITY;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_CHARS__VALUE = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Single Chars</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_CHARS_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.WildcardImpl <em>Wildcard</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.WildcardImpl
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getWildcard()
   * @generated
   */
  int WILDCARD = 2;

  /**
   * The feature id for the '<em><b>Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WILDCARD__CARDINALITY = ABSTRACT_ELEMENT__CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Min Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WILDCARD__HAS_MIN_CARD = ABSTRACT_ELEMENT__HAS_MIN_CARD;

  /**
   * The feature id for the '<em><b>Min Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WILDCARD__MIN_CARDINALITY = ABSTRACT_ELEMENT__MIN_CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Max Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WILDCARD__HAS_MAX_CARD = ABSTRACT_ELEMENT__HAS_MAX_CARD;

  /**
   * The feature id for the '<em><b>Max Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WILDCARD__MAX_CARDINALITY = ABSTRACT_ELEMENT__MAX_CARDINALITY;

  /**
   * The number of structural features of the '<em>Wildcard</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WILDCARD_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.MultiCharactersImpl <em>Multi Characters</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.MultiCharactersImpl
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getMultiCharacters()
   * @generated
   */
  int MULTI_CHARACTERS = 3;

  /**
   * The feature id for the '<em><b>Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_CHARACTERS__CARDINALITY = ABSTRACT_ELEMENT__CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Min Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_CHARACTERS__HAS_MIN_CARD = ABSTRACT_ELEMENT__HAS_MIN_CARD;

  /**
   * The feature id for the '<em><b>Min Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_CHARACTERS__MIN_CARDINALITY = ABSTRACT_ELEMENT__MIN_CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Max Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_CHARACTERS__HAS_MAX_CARD = ABSTRACT_ELEMENT__HAS_MAX_CARD;

  /**
   * The feature id for the '<em><b>Max Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_CHARACTERS__MAX_CARDINALITY = ABSTRACT_ELEMENT__MAX_CARDINALITY;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_CHARACTERS__VALUE = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Multi Characters</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_CHARACTERS_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.RegexAlternativesImpl <em>Regex Alternatives</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.RegexAlternativesImpl
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getRegexAlternatives()
   * @generated
   */
  int REGEX_ALTERNATIVES = 4;

  /**
   * The feature id for the '<em><b>Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_ALTERNATIVES__CARDINALITY = ABSTRACT_ELEMENT__CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Min Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_ALTERNATIVES__HAS_MIN_CARD = ABSTRACT_ELEMENT__HAS_MIN_CARD;

  /**
   * The feature id for the '<em><b>Min Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_ALTERNATIVES__MIN_CARDINALITY = ABSTRACT_ELEMENT__MIN_CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Max Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_ALTERNATIVES__HAS_MAX_CARD = ABSTRACT_ELEMENT__HAS_MAX_CARD;

  /**
   * The feature id for the '<em><b>Max Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_ALTERNATIVES__MAX_CARDINALITY = ABSTRACT_ELEMENT__MAX_CARDINALITY;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_ALTERNATIVES__ELEMENTS = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Regex Alternatives</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_ALTERNATIVES_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.RegexGroupImpl <em>Regex Group</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.RegexGroupImpl
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getRegexGroup()
   * @generated
   */
  int REGEX_GROUP = 5;

  /**
   * The feature id for the '<em><b>Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_GROUP__CARDINALITY = ABSTRACT_ELEMENT__CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Min Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_GROUP__HAS_MIN_CARD = ABSTRACT_ELEMENT__HAS_MIN_CARD;

  /**
   * The feature id for the '<em><b>Min Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_GROUP__MIN_CARDINALITY = ABSTRACT_ELEMENT__MIN_CARDINALITY;

  /**
   * The feature id for the '<em><b>Has Max Card</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_GROUP__HAS_MAX_CARD = ABSTRACT_ELEMENT__HAS_MAX_CARD;

  /**
   * The feature id for the '<em><b>Max Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_GROUP__MAX_CARDINALITY = ABSTRACT_ELEMENT__MAX_CARDINALITY;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_GROUP__ELEMENTS = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Regex Group</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGEX_GROUP_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement <em>Abstract Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abstract Element</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement
   * @generated
   */
  EClass getAbstractElement();

  /**
   * Returns the meta object for the attribute '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#getCardinality <em>Cardinality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cardinality</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#getCardinality()
   * @see #getAbstractElement()
   * @generated
   */
  EAttribute getAbstractElement_Cardinality();

  /**
   * Returns the meta object for the attribute '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#isHasMinCard <em>Has Min Card</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Has Min Card</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#isHasMinCard()
   * @see #getAbstractElement()
   * @generated
   */
  EAttribute getAbstractElement_HasMinCard();

  /**
   * Returns the meta object for the attribute '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#getMinCardinality <em>Min Cardinality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Cardinality</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#getMinCardinality()
   * @see #getAbstractElement()
   * @generated
   */
  EAttribute getAbstractElement_MinCardinality();

  /**
   * Returns the meta object for the attribute '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#isHasMaxCard <em>Has Max Card</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Has Max Card</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#isHasMaxCard()
   * @see #getAbstractElement()
   * @generated
   */
  EAttribute getAbstractElement_HasMaxCard();

  /**
   * Returns the meta object for the attribute '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#getMaxCardinality <em>Max Cardinality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Cardinality</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.AbstractElement#getMaxCardinality()
   * @see #getAbstractElement()
   * @generated
   */
  EAttribute getAbstractElement_MaxCardinality();

  /**
   * Returns the meta object for class '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.SingleChars <em>Single Chars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Single Chars</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.SingleChars
   * @generated
   */
  EClass getSingleChars();

  /**
   * Returns the meta object for the attribute '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.SingleChars#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.SingleChars#getValue()
   * @see #getSingleChars()
   * @generated
   */
  EAttribute getSingleChars_Value();

  /**
   * Returns the meta object for class '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.Wildcard <em>Wildcard</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Wildcard</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.Wildcard
   * @generated
   */
  EClass getWildcard();

  /**
   * Returns the meta object for class '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.MultiCharacters <em>Multi Characters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multi Characters</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.MultiCharacters
   * @generated
   */
  EClass getMultiCharacters();

  /**
   * Returns the meta object for the attribute '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.MultiCharacters#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.MultiCharacters#getValue()
   * @see #getMultiCharacters()
   * @generated
   */
  EAttribute getMultiCharacters_Value();

  /**
   * Returns the meta object for class '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.RegexAlternatives <em>Regex Alternatives</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Regex Alternatives</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.RegexAlternatives
   * @generated
   */
  EClass getRegexAlternatives();

  /**
   * Returns the meta object for the containment reference list '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.RegexAlternatives#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.RegexAlternatives#getElements()
   * @see #getRegexAlternatives()
   * @generated
   */
  EReference getRegexAlternatives_Elements();

  /**
   * Returns the meta object for class '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.RegexGroup <em>Regex Group</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Regex Group</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.RegexGroup
   * @generated
   */
  EClass getRegexGroup();

  /**
   * Returns the meta object for the containment reference list '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.RegexGroup#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see uk.ac.york.simpleregexp.simplereg.simpleReg.RegexGroup#getElements()
   * @see #getRegexGroup()
   * @generated
   */
  EReference getRegexGroup_Elements();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  SimpleRegFactory getSimpleRegFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.AbstractElementImpl <em>Abstract Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.AbstractElementImpl
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getAbstractElement()
     * @generated
     */
    EClass ABSTRACT_ELEMENT = eINSTANCE.getAbstractElement();

    /**
     * The meta object literal for the '<em><b>Cardinality</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ABSTRACT_ELEMENT__CARDINALITY = eINSTANCE.getAbstractElement_Cardinality();

    /**
     * The meta object literal for the '<em><b>Has Min Card</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ABSTRACT_ELEMENT__HAS_MIN_CARD = eINSTANCE.getAbstractElement_HasMinCard();

    /**
     * The meta object literal for the '<em><b>Min Cardinality</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ABSTRACT_ELEMENT__MIN_CARDINALITY = eINSTANCE.getAbstractElement_MinCardinality();

    /**
     * The meta object literal for the '<em><b>Has Max Card</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ABSTRACT_ELEMENT__HAS_MAX_CARD = eINSTANCE.getAbstractElement_HasMaxCard();

    /**
     * The meta object literal for the '<em><b>Max Cardinality</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ABSTRACT_ELEMENT__MAX_CARDINALITY = eINSTANCE.getAbstractElement_MaxCardinality();

    /**
     * The meta object literal for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SingleCharsImpl <em>Single Chars</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SingleCharsImpl
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getSingleChars()
     * @generated
     */
    EClass SINGLE_CHARS = eINSTANCE.getSingleChars();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SINGLE_CHARS__VALUE = eINSTANCE.getSingleChars_Value();

    /**
     * The meta object literal for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.WildcardImpl <em>Wildcard</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.WildcardImpl
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getWildcard()
     * @generated
     */
    EClass WILDCARD = eINSTANCE.getWildcard();

    /**
     * The meta object literal for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.MultiCharactersImpl <em>Multi Characters</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.MultiCharactersImpl
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getMultiCharacters()
     * @generated
     */
    EClass MULTI_CHARACTERS = eINSTANCE.getMultiCharacters();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTI_CHARACTERS__VALUE = eINSTANCE.getMultiCharacters_Value();

    /**
     * The meta object literal for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.RegexAlternativesImpl <em>Regex Alternatives</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.RegexAlternativesImpl
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getRegexAlternatives()
     * @generated
     */
    EClass REGEX_ALTERNATIVES = eINSTANCE.getRegexAlternatives();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REGEX_ALTERNATIVES__ELEMENTS = eINSTANCE.getRegexAlternatives_Elements();

    /**
     * The meta object literal for the '{@link uk.ac.york.simpleregexp.simplereg.simpleReg.impl.RegexGroupImpl <em>Regex Group</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.RegexGroupImpl
     * @see uk.ac.york.simpleregexp.simplereg.simpleReg.impl.SimpleRegPackageImpl#getRegexGroup()
     * @generated
     */
    EClass REGEX_GROUP = eINSTANCE.getRegexGroup();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REGEX_GROUP__ELEMENTS = eINSTANCE.getRegexGroup_Elements();

  }

} //SimpleRegPackage
