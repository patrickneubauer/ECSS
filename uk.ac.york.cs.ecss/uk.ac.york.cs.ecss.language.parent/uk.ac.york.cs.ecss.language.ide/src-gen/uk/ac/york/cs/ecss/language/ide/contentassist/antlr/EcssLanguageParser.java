/*
 * generated by Xtext 2.15.0
 */
package uk.ac.york.cs.ecss.language.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import uk.ac.york.cs.ecss.language.ide.contentassist.antlr.internal.InternalEcssLanguageParser;
import uk.ac.york.cs.ecss.language.services.EcssLanguageGrammarAccess;

public class EcssLanguageParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(EcssLanguageGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, EcssLanguageGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getModelAccess().getAlternatives_2(), "rule__Model__Alternatives_2");
			builder.put(grammarAccess.getTemplateRuleOrDefAccess().getAlternatives(), "rule__TemplateRuleOrDef__Alternatives");
			builder.put(grammarAccess.getTemplateRuleAccess().getAlternatives(), "rule__TemplateRule__Alternatives");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getAlternatives_5(), "rule__TemplateGeneratorRule__Alternatives_5");
			builder.put(grammarAccess.getTemplateRulePartAccess().getAlternatives(), "rule__TemplateRulePart__Alternatives");
			builder.put(grammarAccess.getForEachExpressionAccess().getAlternatives_4(), "rule__ForEachExpression__Alternatives_4");
			builder.put(grammarAccess.getLocalOrValueCallAccess().getAlternatives_1(), "rule__LocalOrValueCall__Alternatives_1");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getAlternatives(), "rule__TemplateParameterValue__Alternatives");
			builder.put(grammarAccess.getSingleSelectorAccess().getAlternatives_0(), "rule__SingleSelector__Alternatives_0");
			builder.put(grammarAccess.getSingleSelectorAccess().getReferredNameAlternatives_0_1_0(), "rule__SingleSelector__ReferredNameAlternatives_0_1_0");
			builder.put(grammarAccess.getPropertyAccess().getAlternatives_0(), "rule__Property__Alternatives_0");
			builder.put(grammarAccess.getPropertyAccess().getNameAlternatives_0_2_0(), "rule__Property__NameAlternatives_0_2_0");
			builder.put(grammarAccess.getPropertyValueAccess().getAlternatives_0(), "rule__PropertyValue__Alternatives_0");
			builder.put(grammarAccess.getTEST1MIDAccess().getAlternatives(), "rule__TEST1MID__Alternatives");
			builder.put(grammarAccess.getTEST3MIDAccess().getAlternatives(), "rule__TEST3MID__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getConfigAccess().getGroup(), "rule__Config__Group__0");
			builder.put(grammarAccess.getConfigAccess().getGroup_3(), "rule__Config__Group_3__0");
			builder.put(grammarAccess.getConfigAccess().getGroup_4(), "rule__Config__Group_4__0");
			builder.put(grammarAccess.getConfigAccess().getGroup_5(), "rule__Config__Group_5__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getTemplateDefAccess().getGroup(), "rule__TemplateDef__Group__0");
			builder.put(grammarAccess.getTemplateGenDefAccess().getGroup(), "rule__TemplateGenDef__Group__0");
			builder.put(grammarAccess.getTemplateGenDefAccess().getGroup_2(), "rule__TemplateGenDef__Group_2__0");
			builder.put(grammarAccess.getTemplateGenDefAccess().getGroup_3(), "rule__TemplateGenDef__Group_3__0");
			builder.put(grammarAccess.getBasicTemplateRuleAccess().getGroup(), "rule__BasicTemplateRule__Group__0");
			builder.put(grammarAccess.getBasicTemplateRuleAccess().getGroup_3(), "rule__BasicTemplateRule__Group_3__0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroup(), "rule__TemplateGeneratorRule__Group__0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroup_3(), "rule__TemplateGeneratorRule__Group_3__0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroup_4(), "rule__TemplateGeneratorRule__Group_4__0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroup_4_1(), "rule__TemplateGeneratorRule__Group_4_1__0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroup_4_1_1(), "rule__TemplateGeneratorRule__Group_4_1_1__0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroup_5_0(), "rule__TemplateGeneratorRule__Group_5_0__0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroup_5_1(), "rule__TemplateGeneratorRule__Group_5_1__0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroup_6(), "rule__TemplateGeneratorRule__Group_6__0");
			builder.put(grammarAccess.getTypeDefAccess().getGroup(), "rule__TypeDef__Group__0");
			builder.put(grammarAccess.getForEachExpressionAccess().getGroup(), "rule__ForEachExpression__Group__0");
			builder.put(grammarAccess.getForEachExpressionAccess().getGroup_5(), "rule__ForEachExpression__Group_5__0");
			builder.put(grammarAccess.getIfExpressionAccess().getGroup(), "rule__IfExpression__Group__0");
			builder.put(grammarAccess.getIfExpressionAccess().getGroup_7(), "rule__IfExpression__Group_7__0");
			builder.put(grammarAccess.getTemplateFunctionCallAccess().getGroup(), "rule__TemplateFunctionCall__Group__0");
			builder.put(grammarAccess.getTemplateFunctionCallAccess().getGroup_4(), "rule__TemplateFunctionCall__Group_4__0");
			builder.put(grammarAccess.getTemplateFunctionCallAccess().getGroup_4_1(), "rule__TemplateFunctionCall__Group_4_1__0");
			builder.put(grammarAccess.getSlotCallAccess().getGroup(), "rule__SlotCall__Group__0");
			builder.put(grammarAccess.getSlotCallAccess().getGroup_2(), "rule__SlotCall__Group_2__0");
			builder.put(grammarAccess.getSlotCallAccess().getGroup_2_2(), "rule__SlotCall__Group_2_2__0");
			builder.put(grammarAccess.getLocalOrValueCallAccess().getGroup(), "rule__LocalOrValueCall__Group__0");
			builder.put(grammarAccess.getLocalEvaluationCallAccess().getGroup(), "rule__LocalEvaluationCall__Group__0");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getGroup_0(), "rule__TemplateParameterValue__Group_0__0");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getGroup_2(), "rule__TemplateParameterValue__Group_2__0");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getGroup_2_2(), "rule__TemplateParameterValue__Group_2_2__0");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getGroup_2_2_2(), "rule__TemplateParameterValue__Group_2_2_2__0");
			builder.put(grammarAccess.getEvaluationCallAccess().getGroup(), "rule__EvaluationCall__Group__0");
			builder.put(grammarAccess.getPropertyRuleAccess().getGroup(), "rule__PropertyRule__Group__0");
			builder.put(grammarAccess.getSingleSelectorAccess().getGroup(), "rule__SingleSelector__Group__0");
			builder.put(grammarAccess.getPossiblySignedNumberAccess().getGroup(), "rule__PossiblySignedNumber__Group__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
			builder.put(grammarAccess.getTemplateMatchAccess().getGroup(), "rule__TemplateMatch__Group__0");
			builder.put(grammarAccess.getSlotMatchAccess().getGroup(), "rule__SlotMatch__Group__0");
			builder.put(grammarAccess.getPropertyValueAccess().getGroup(), "rule__PropertyValue__Group__0");
			builder.put(grammarAccess.getPropertyValueAccess().getGroup_0_3(), "rule__PropertyValue__Group_0_3__0");
			builder.put(grammarAccess.getPropertyValueAccess().getGroup_1(), "rule__PropertyValue__Group_1__0");
			builder.put(grammarAccess.getPropertyValueAccess().getGroup_1_1(), "rule__PropertyValue__Group_1_1__0");
			builder.put(grammarAccess.getPropertyValueAccess().getGroup_1_1_1(), "rule__PropertyValue__Group_1_1_1__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getModelAccess().getConfigAssignment_0(), "rule__Model__ConfigAssignment_0");
			builder.put(grammarAccess.getModelAccess().getImportStatementAssignment_1(), "rule__Model__ImportStatementAssignment_1");
			builder.put(grammarAccess.getModelAccess().getTemplateDefsAssignment_2_0(), "rule__Model__TemplateDefsAssignment_2_0");
			builder.put(grammarAccess.getModelAccess().getTemplateGenDefsAssignment_2_1(), "rule__Model__TemplateGenDefsAssignment_2_1");
			builder.put(grammarAccess.getModelAccess().getTemplatesAssignment_2_2(), "rule__Model__TemplatesAssignment_2_2");
			builder.put(grammarAccess.getModelAccess().getPropertiesAssignment_2_3(), "rule__Model__PropertiesAssignment_2_3");
			builder.put(grammarAccess.getConfigAccess().getHasMinImprovementAssignment_3_0(), "rule__Config__HasMinImprovementAssignment_3_0");
			builder.put(grammarAccess.getConfigAccess().getMinImprovementAssignment_3_1(), "rule__Config__MinImprovementAssignment_3_1");
			builder.put(grammarAccess.getConfigAccess().getHasMaxDegressionAssignment_4_0(), "rule__Config__HasMaxDegressionAssignment_4_0");
			builder.put(grammarAccess.getConfigAccess().getMaxDegressionAssignment_4_1(), "rule__Config__MaxDegressionAssignment_4_1");
			builder.put(grammarAccess.getConfigAccess().getHaxMaxThingsAssignment_5_0(), "rule__Config__HaxMaxThingsAssignment_5_0");
			builder.put(grammarAccess.getConfigAccess().getMaxThingsAssignment_5_1(), "rule__Config__MaxThingsAssignment_5_1");
			builder.put(grammarAccess.getImportAccess().getNameAssignment_1(), "rule__Import__NameAssignment_1");
			builder.put(grammarAccess.getTemplateDefAccess().getNameAssignment_1(), "rule__TemplateDef__NameAssignment_1");
			builder.put(grammarAccess.getTemplateDefAccess().getJavaClassAssignment_3(), "rule__TemplateDef__JavaClassAssignment_3");
			builder.put(grammarAccess.getTemplateGenDefAccess().getNameAssignment_1(), "rule__TemplateGenDef__NameAssignment_1");
			builder.put(grammarAccess.getTemplateGenDefAccess().getSuperRuleAssignment_2_1(), "rule__TemplateGenDef__SuperRuleAssignment_2_1");
			builder.put(grammarAccess.getTemplateGenDefAccess().getJavaClassAssignment_3_1(), "rule__TemplateGenDef__JavaClassAssignment_3_1");
			builder.put(grammarAccess.getBasicTemplateRuleAccess().getTypeAssignment_1(), "rule__BasicTemplateRule__TypeAssignment_1");
			builder.put(grammarAccess.getBasicTemplateRuleAccess().getNameAssignment_2(), "rule__BasicTemplateRule__NameAssignment_2");
			builder.put(grammarAccess.getBasicTemplateRuleAccess().getGroupsAssignment_3_1(), "rule__BasicTemplateRule__GroupsAssignment_3_1");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getTypeAssignment_1(), "rule__TemplateGeneratorRule__TypeAssignment_1");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getNameAssignment_2(), "rule__TemplateGeneratorRule__NameAssignment_2");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getGroupsAssignment_3_1(), "rule__TemplateGeneratorRule__GroupsAssignment_3_1");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getTypeDefAssignment_4_1_0(), "rule__TemplateGeneratorRule__TypeDefAssignment_4_1_0");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getTypeDefAssignment_4_1_1_1(), "rule__TemplateGeneratorRule__TypeDefAssignment_4_1_1_1");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getIdPartAssignment_5_0_1(), "rule__TemplateGeneratorRule__IdPartAssignment_5_0_1");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getIdPartAssignment_5_1_1(), "rule__TemplateGeneratorRule__IdPartAssignment_5_1_1");
			builder.put(grammarAccess.getTemplateGeneratorRuleAccess().getTemplateRulePartAssignment_6_1(), "rule__TemplateGeneratorRule__TemplateRulePartAssignment_6_1");
			builder.put(grammarAccess.getTypeDefAccess().getTypeAssignment_0(), "rule__TypeDef__TypeAssignment_0");
			builder.put(grammarAccess.getTypeDefAccess().getNameAssignment_1(), "rule__TypeDef__NameAssignment_1");
			builder.put(grammarAccess.getForEachExpressionAccess().getTypeAssignment_1(), "rule__ForEachExpression__TypeAssignment_1");
			builder.put(grammarAccess.getForEachExpressionAccess().getVariableAssignment_2(), "rule__ForEachExpression__VariableAssignment_2");
			builder.put(grammarAccess.getForEachExpressionAccess().getExprVarAssignment_4_0(), "rule__ForEachExpression__ExprVarAssignment_4_0");
			builder.put(grammarAccess.getForEachExpressionAccess().getCompleteExprAssignment_4_1(), "rule__ForEachExpression__CompleteExprAssignment_4_1");
			builder.put(grammarAccess.getForEachExpressionAccess().getJoinAssignment_5_1(), "rule__ForEachExpression__JoinAssignment_5_1");
			builder.put(grammarAccess.getForEachExpressionAccess().getBodyAssignment_7(), "rule__ForEachExpression__BodyAssignment_7");
			builder.put(grammarAccess.getIfExpressionAccess().getValAssignment_2(), "rule__IfExpression__ValAssignment_2");
			builder.put(grammarAccess.getIfExpressionAccess().getThenAssignment_5(), "rule__IfExpression__ThenAssignment_5");
			builder.put(grammarAccess.getIfExpressionAccess().getElseAssignment_7_2(), "rule__IfExpression__ElseAssignment_7_2");
			builder.put(grammarAccess.getStaticTemplateRulePartAccess().getValueAssignment(), "rule__StaticTemplateRulePart__ValueAssignment");
			builder.put(grammarAccess.getTemplateFunctionCallAccess().getIsReferenceAssignment_1(), "rule__TemplateFunctionCall__IsReferenceAssignment_1");
			builder.put(grammarAccess.getTemplateFunctionCallAccess().getNameAssignment_2(), "rule__TemplateFunctionCall__NameAssignment_2");
			builder.put(grammarAccess.getTemplateFunctionCallAccess().getParValueAssignment_4_0(), "rule__TemplateFunctionCall__ParValueAssignment_4_0");
			builder.put(grammarAccess.getTemplateFunctionCallAccess().getParValueAssignment_4_1_1(), "rule__TemplateFunctionCall__ParValueAssignment_4_1_1");
			builder.put(grammarAccess.getSlotCallAccess().getNameAssignment_1(), "rule__SlotCall__NameAssignment_1");
			builder.put(grammarAccess.getSlotCallAccess().getMinValueAssignment_2_1(), "rule__SlotCall__MinValueAssignment_2_1");
			builder.put(grammarAccess.getSlotCallAccess().getMaxValueAssignment_2_2_1(), "rule__SlotCall__MaxValueAssignment_2_2_1");
			builder.put(grammarAccess.getLocalOrValueCallAccess().getNameAssignment_1_0(), "rule__LocalOrValueCall__NameAssignment_1_0");
			builder.put(grammarAccess.getLocalOrValueCallAccess().getNameAssignment_1_1(), "rule__LocalOrValueCall__NameAssignment_1_1");
			builder.put(grammarAccess.getLocalEvaluationCallAccess().getValueAssignment_1(), "rule__LocalEvaluationCall__ValueAssignment_1");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getPropNameAssignment_0_1(), "rule__TemplateParameterValue__PropNameAssignment_0_1");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getVarNameAssignment_1(), "rule__TemplateParameterValue__VarNameAssignment_1");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getSlotNameAssignment_2_1(), "rule__TemplateParameterValue__SlotNameAssignment_2_1");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getMinValueAssignment_2_2_1(), "rule__TemplateParameterValue__MinValueAssignment_2_2_1");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getMaxValueAssignment_2_2_2_1(), "rule__TemplateParameterValue__MaxValueAssignment_2_2_2_1");
			builder.put(grammarAccess.getTemplateParameterValueAccess().getDirectAssignment_3(), "rule__TemplateParameterValue__DirectAssignment_3");
			builder.put(grammarAccess.getEvaluationCallAccess().getValueAssignment_1(), "rule__EvaluationCall__ValueAssignment_1");
			builder.put(grammarAccess.getPropertyRuleAccess().getSelectorAssignment_1(), "rule__PropertyRule__SelectorAssignment_1");
			builder.put(grammarAccess.getPropertyRuleAccess().getPropertyAssignment_3(), "rule__PropertyRule__PropertyAssignment_3");
			builder.put(grammarAccess.getSelectorAccess().getSelectorsAssignment(), "rule__Selector__SelectorsAssignment");
			builder.put(grammarAccess.getSingleSelectorAccess().getAllTypesAssignment_0_0(), "rule__SingleSelector__AllTypesAssignment_0_0");
			builder.put(grammarAccess.getSingleSelectorAccess().getReferredNameAssignment_0_1(), "rule__SingleSelector__ReferredNameAssignment_0_1");
			builder.put(grammarAccess.getSingleSelectorAccess().getConditionAssignment_1(), "rule__SingleSelector__ConditionAssignment_1");
			builder.put(grammarAccess.getPropertyAccess().getTemplateMatchAssignment_0_0(), "rule__Property__TemplateMatchAssignment_0_0");
			builder.put(grammarAccess.getPropertyAccess().getSlotMatchAssignment_0_1(), "rule__Property__SlotMatchAssignment_0_1");
			builder.put(grammarAccess.getPropertyAccess().getNameAssignment_0_2(), "rule__Property__NameAssignment_0_2");
			builder.put(grammarAccess.getPropertyAccess().getConditionAssignment_1(), "rule__Property__ConditionAssignment_1");
			builder.put(grammarAccess.getPropertyAccess().getValueAssignment_3(), "rule__Property__ValueAssignment_3");
			builder.put(grammarAccess.getTemplateMatchAccess().getSelectorAssignment_2(), "rule__TemplateMatch__SelectorAssignment_2");
			builder.put(grammarAccess.getSlotMatchAccess().getFirstAssignment_2(), "rule__SlotMatch__FirstAssignment_2");
			builder.put(grammarAccess.getSlotMatchAccess().getSecondAssignment_4(), "rule__SlotMatch__SecondAssignment_4");
			builder.put(grammarAccess.getPropertyValueAccess().getValueAssignment_0_0(), "rule__PropertyValue__ValueAssignment_0_0");
			builder.put(grammarAccess.getPropertyValueAccess().getValueAssignment_0_1(), "rule__PropertyValue__ValueAssignment_0_1");
			builder.put(grammarAccess.getPropertyValueAccess().getValueNumbAssignment_0_2(), "rule__PropertyValue__ValueNumbAssignment_0_2");
			builder.put(grammarAccess.getPropertyValueAccess().getOclvalueAssignment_0_3_1(), "rule__PropertyValue__OclvalueAssignment_0_3_1");
			builder.put(grammarAccess.getPropertyValueAccess().getHasPropertyAssignment_1_0(), "rule__PropertyValue__HasPropertyAssignment_1_0");
			builder.put(grammarAccess.getPropertyValueAccess().getArgumentAssignment_1_1_0(), "rule__PropertyValue__ArgumentAssignment_1_1_0");
			builder.put(grammarAccess.getPropertyValueAccess().getArgumentAssignment_1_1_1_1(), "rule__PropertyValue__ArgumentAssignment_1_1_1_1");
			builder.put(grammarAccess.getConditionAccess().getExpressionAssignment_1(), "rule__Condition__ExpressionAssignment_1");
			builder.put(grammarAccess.getSpecificationCSAccess().getOwnedExpressionAssignment(), "rule__SpecificationCS__OwnedExpressionAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private EcssLanguageGrammarAccess grammarAccess;

	@Override
	protected InternalEcssLanguageParser createParser() {
		InternalEcssLanguageParser result = new InternalEcssLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public EcssLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(EcssLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
