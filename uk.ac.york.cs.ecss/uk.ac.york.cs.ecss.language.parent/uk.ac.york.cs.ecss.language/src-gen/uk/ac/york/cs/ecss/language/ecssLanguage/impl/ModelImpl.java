/**
 * generated by Xtext 2.14.0
 */
package uk.ac.york.cs.ecss.language.ecssLanguage.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import uk.ac.york.cs.ecss.language.ecssLanguage.Config;
import uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage;
import uk.ac.york.cs.ecss.language.ecssLanguage.Import;
import uk.ac.york.cs.ecss.language.ecssLanguage.Model;
import uk.ac.york.cs.ecss.language.ecssLanguage.PropertyRule;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateDef;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateGenDef;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateRule;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ModelImpl#getConfig <em>Config</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ModelImpl#getImportStatement <em>Import Statement</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ModelImpl#getTemplateDefs <em>Template Defs</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ModelImpl#getTemplateGenDefs <em>Template Gen Defs</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ModelImpl#getTemplates <em>Templates</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.ModelImpl#getProperties <em>Properties</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getConfig() <em>Config</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConfig()
   * @generated
   * @ordered
   */
  protected Config config;

  /**
   * The cached value of the '{@link #getImportStatement() <em>Import Statement</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportStatement()
   * @generated
   * @ordered
   */
  protected EList<Import> importStatement;

  /**
   * The cached value of the '{@link #getTemplateDefs() <em>Template Defs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTemplateDefs()
   * @generated
   * @ordered
   */
  protected EList<TemplateDef> templateDefs;

  /**
   * The cached value of the '{@link #getTemplateGenDefs() <em>Template Gen Defs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTemplateGenDefs()
   * @generated
   * @ordered
   */
  protected EList<TemplateGenDef> templateGenDefs;

  /**
   * The cached value of the '{@link #getTemplates() <em>Templates</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTemplates()
   * @generated
   * @ordered
   */
  protected EList<TemplateRule> templates;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<PropertyRule> properties;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EcssLanguagePackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Config getConfig()
  {
    return config;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConfig(Config newConfig, NotificationChain msgs)
  {
    Config oldConfig = config;
    config = newConfig;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.MODEL__CONFIG, oldConfig, newConfig);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConfig(Config newConfig)
  {
    if (newConfig != config)
    {
      NotificationChain msgs = null;
      if (config != null)
        msgs = ((InternalEObject)config).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EcssLanguagePackage.MODEL__CONFIG, null, msgs);
      if (newConfig != null)
        msgs = ((InternalEObject)newConfig).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EcssLanguagePackage.MODEL__CONFIG, null, msgs);
      msgs = basicSetConfig(newConfig, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.MODEL__CONFIG, newConfig, newConfig));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Import> getImportStatement()
  {
    if (importStatement == null)
    {
      importStatement = new EObjectContainmentEList<Import>(Import.class, this, EcssLanguagePackage.MODEL__IMPORT_STATEMENT);
    }
    return importStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<TemplateDef> getTemplateDefs()
  {
    if (templateDefs == null)
    {
      templateDefs = new EObjectContainmentEList<TemplateDef>(TemplateDef.class, this, EcssLanguagePackage.MODEL__TEMPLATE_DEFS);
    }
    return templateDefs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<TemplateGenDef> getTemplateGenDefs()
  {
    if (templateGenDefs == null)
    {
      templateGenDefs = new EObjectContainmentEList<TemplateGenDef>(TemplateGenDef.class, this, EcssLanguagePackage.MODEL__TEMPLATE_GEN_DEFS);
    }
    return templateGenDefs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<TemplateRule> getTemplates()
  {
    if (templates == null)
    {
      templates = new EObjectContainmentEList<TemplateRule>(TemplateRule.class, this, EcssLanguagePackage.MODEL__TEMPLATES);
    }
    return templates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<PropertyRule> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<PropertyRule>(PropertyRule.class, this, EcssLanguagePackage.MODEL__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.MODEL__CONFIG:
        return basicSetConfig(null, msgs);
      case EcssLanguagePackage.MODEL__IMPORT_STATEMENT:
        return ((InternalEList<?>)getImportStatement()).basicRemove(otherEnd, msgs);
      case EcssLanguagePackage.MODEL__TEMPLATE_DEFS:
        return ((InternalEList<?>)getTemplateDefs()).basicRemove(otherEnd, msgs);
      case EcssLanguagePackage.MODEL__TEMPLATE_GEN_DEFS:
        return ((InternalEList<?>)getTemplateGenDefs()).basicRemove(otherEnd, msgs);
      case EcssLanguagePackage.MODEL__TEMPLATES:
        return ((InternalEList<?>)getTemplates()).basicRemove(otherEnd, msgs);
      case EcssLanguagePackage.MODEL__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.MODEL__CONFIG:
        return getConfig();
      case EcssLanguagePackage.MODEL__IMPORT_STATEMENT:
        return getImportStatement();
      case EcssLanguagePackage.MODEL__TEMPLATE_DEFS:
        return getTemplateDefs();
      case EcssLanguagePackage.MODEL__TEMPLATE_GEN_DEFS:
        return getTemplateGenDefs();
      case EcssLanguagePackage.MODEL__TEMPLATES:
        return getTemplates();
      case EcssLanguagePackage.MODEL__PROPERTIES:
        return getProperties();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.MODEL__CONFIG:
        setConfig((Config)newValue);
        return;
      case EcssLanguagePackage.MODEL__IMPORT_STATEMENT:
        getImportStatement().clear();
        getImportStatement().addAll((Collection<? extends Import>)newValue);
        return;
      case EcssLanguagePackage.MODEL__TEMPLATE_DEFS:
        getTemplateDefs().clear();
        getTemplateDefs().addAll((Collection<? extends TemplateDef>)newValue);
        return;
      case EcssLanguagePackage.MODEL__TEMPLATE_GEN_DEFS:
        getTemplateGenDefs().clear();
        getTemplateGenDefs().addAll((Collection<? extends TemplateGenDef>)newValue);
        return;
      case EcssLanguagePackage.MODEL__TEMPLATES:
        getTemplates().clear();
        getTemplates().addAll((Collection<? extends TemplateRule>)newValue);
        return;
      case EcssLanguagePackage.MODEL__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends PropertyRule>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.MODEL__CONFIG:
        setConfig((Config)null);
        return;
      case EcssLanguagePackage.MODEL__IMPORT_STATEMENT:
        getImportStatement().clear();
        return;
      case EcssLanguagePackage.MODEL__TEMPLATE_DEFS:
        getTemplateDefs().clear();
        return;
      case EcssLanguagePackage.MODEL__TEMPLATE_GEN_DEFS:
        getTemplateGenDefs().clear();
        return;
      case EcssLanguagePackage.MODEL__TEMPLATES:
        getTemplates().clear();
        return;
      case EcssLanguagePackage.MODEL__PROPERTIES:
        getProperties().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.MODEL__CONFIG:
        return config != null;
      case EcssLanguagePackage.MODEL__IMPORT_STATEMENT:
        return importStatement != null && !importStatement.isEmpty();
      case EcssLanguagePackage.MODEL__TEMPLATE_DEFS:
        return templateDefs != null && !templateDefs.isEmpty();
      case EcssLanguagePackage.MODEL__TEMPLATE_GEN_DEFS:
        return templateGenDefs != null && !templateGenDefs.isEmpty();
      case EcssLanguagePackage.MODEL__TEMPLATES:
        return templates != null && !templates.isEmpty();
      case EcssLanguagePackage.MODEL__PROPERTIES:
        return properties != null && !properties.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
