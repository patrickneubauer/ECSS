/**
 * generated by Xtext 2.14.0
 */
package uk.ac.york.cs.ecss.language.ecssLanguage.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateParameterValue;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Template Parameter Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.TemplateParameterValueImpl#getPropName <em>Prop Name</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.TemplateParameterValueImpl#getVarName <em>Var Name</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.TemplateParameterValueImpl#getSlotName <em>Slot Name</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.TemplateParameterValueImpl#getMinValue <em>Min Value</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.TemplateParameterValueImpl#getMaxValue <em>Max Value</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.impl.TemplateParameterValueImpl#getDirect <em>Direct</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TemplateParameterValueImpl extends MinimalEObjectImpl.Container implements TemplateParameterValue
{
  /**
   * The default value of the '{@link #getPropName() <em>Prop Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropName()
   * @generated
   * @ordered
   */
  protected static final String PROP_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPropName() <em>Prop Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropName()
   * @generated
   * @ordered
   */
  protected String propName = PROP_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getVarName() <em>Var Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarName()
   * @generated
   * @ordered
   */
  protected static final String VAR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVarName() <em>Var Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarName()
   * @generated
   * @ordered
   */
  protected String varName = VAR_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getSlotName() <em>Slot Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlotName()
   * @generated
   * @ordered
   */
  protected static final String SLOT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSlotName() <em>Slot Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlotName()
   * @generated
   * @ordered
   */
  protected String slotName = SLOT_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getMinValue() <em>Min Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinValue()
   * @generated
   * @ordered
   */
  protected static final int MIN_VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinValue() <em>Min Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinValue()
   * @generated
   * @ordered
   */
  protected int minValue = MIN_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxValue() <em>Max Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxValue()
   * @generated
   * @ordered
   */
  protected static final int MAX_VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxValue() <em>Max Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxValue()
   * @generated
   * @ordered
   */
  protected int maxValue = MAX_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getDirect() <em>Direct</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDirect()
   * @generated
   * @ordered
   */
  protected static final String DIRECT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDirect() <em>Direct</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDirect()
   * @generated
   * @ordered
   */
  protected String direct = DIRECT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TemplateParameterValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EcssLanguagePackage.Literals.TEMPLATE_PARAMETER_VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPropName()
  {
    return propName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPropName(String newPropName)
  {
    String oldPropName = propName;
    propName = newPropName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__PROP_NAME, oldPropName, propName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVarName()
  {
    return varName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVarName(String newVarName)
  {
    String oldVarName = varName;
    varName = newVarName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__VAR_NAME, oldVarName, varName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSlotName()
  {
    return slotName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSlotName(String newSlotName)
  {
    String oldSlotName = slotName;
    slotName = newSlotName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__SLOT_NAME, oldSlotName, slotName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMinValue()
  {
    return minValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinValue(int newMinValue)
  {
    int oldMinValue = minValue;
    minValue = newMinValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MIN_VALUE, oldMinValue, minValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMaxValue()
  {
    return maxValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxValue(int newMaxValue)
  {
    int oldMaxValue = maxValue;
    maxValue = newMaxValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MAX_VALUE, oldMaxValue, maxValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDirect()
  {
    return direct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDirect(String newDirect)
  {
    String oldDirect = direct;
    direct = newDirect;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__DIRECT, oldDirect, direct));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__PROP_NAME:
        return getPropName();
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__VAR_NAME:
        return getVarName();
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__SLOT_NAME:
        return getSlotName();
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MIN_VALUE:
        return getMinValue();
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MAX_VALUE:
        return getMaxValue();
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__DIRECT:
        return getDirect();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__PROP_NAME:
        setPropName((String)newValue);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__VAR_NAME:
        setVarName((String)newValue);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__SLOT_NAME:
        setSlotName((String)newValue);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MIN_VALUE:
        setMinValue((Integer)newValue);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MAX_VALUE:
        setMaxValue((Integer)newValue);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__DIRECT:
        setDirect((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__PROP_NAME:
        setPropName(PROP_NAME_EDEFAULT);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__VAR_NAME:
        setVarName(VAR_NAME_EDEFAULT);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__SLOT_NAME:
        setSlotName(SLOT_NAME_EDEFAULT);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MIN_VALUE:
        setMinValue(MIN_VALUE_EDEFAULT);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MAX_VALUE:
        setMaxValue(MAX_VALUE_EDEFAULT);
        return;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__DIRECT:
        setDirect(DIRECT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__PROP_NAME:
        return PROP_NAME_EDEFAULT == null ? propName != null : !PROP_NAME_EDEFAULT.equals(propName);
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__VAR_NAME:
        return VAR_NAME_EDEFAULT == null ? varName != null : !VAR_NAME_EDEFAULT.equals(varName);
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__SLOT_NAME:
        return SLOT_NAME_EDEFAULT == null ? slotName != null : !SLOT_NAME_EDEFAULT.equals(slotName);
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MIN_VALUE:
        return minValue != MIN_VALUE_EDEFAULT;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__MAX_VALUE:
        return maxValue != MAX_VALUE_EDEFAULT;
      case EcssLanguagePackage.TEMPLATE_PARAMETER_VALUE__DIRECT:
        return DIRECT_EDEFAULT == null ? direct != null : !DIRECT_EDEFAULT.equals(direct);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (propName: ");
    result.append(propName);
    result.append(", varName: ");
    result.append(varName);
    result.append(", slotName: ");
    result.append(slotName);
    result.append(", minValue: ");
    result.append(minValue);
    result.append(", maxValue: ");
    result.append(maxValue);
    result.append(", direct: ");
    result.append(direct);
    result.append(')');
    return result.toString();
  }

} //TemplateParameterValueImpl
