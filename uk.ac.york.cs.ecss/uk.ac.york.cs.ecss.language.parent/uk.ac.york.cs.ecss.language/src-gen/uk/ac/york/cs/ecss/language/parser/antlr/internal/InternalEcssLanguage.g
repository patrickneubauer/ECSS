/*
 * generated by Xtext 2.14.0
 */
grammar InternalEcssLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uk.ac.york.cs.ecss.language.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uk.ac.york.cs.ecss.language.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uk.ac.york.cs.ecss.language.services.EcssLanguageGrammarAccess;

}

@parser::members {

 	private EcssLanguageGrammarAccess grammarAccess;

    public InternalEcssLanguageParser(TokenStream input, EcssLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected EcssLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getConfigConfigParserRuleCall_0_0());
				}
				lv_config_0_0=ruleConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"config",
						lv_config_0_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.Config");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getImportStatementImportParserRuleCall_1_0());
				}
				lv_importStatement_1_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"importStatement",
						lv_importStatement_1_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getTemplateDefsTemplateDefParserRuleCall_2_0_0());
					}
					lv_templateDefs_2_0=ruleTemplateDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"templateDefs",
							lv_templateDefs_2_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getTemplateGenDefsTemplateGenDefParserRuleCall_2_1_0());
					}
					lv_templateGenDefs_3_0=ruleTemplateGenDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"templateGenDefs",
							lv_templateGenDefs_3_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateGenDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getTemplatesTemplateRuleParserRuleCall_2_2_0());
					}
					lv_templates_4_0=ruleTemplateRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"templates",
							lv_templates_4_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getPropertiesPropertyRuleParserRuleCall_2_3_0());
					}
					lv_properties_5_0=rulePropertyRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"properties",
							lv_properties_5_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.PropertyRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	iv_ruleConfig=ruleConfig
	{ $current=$iv_ruleConfig.current; }
	EOF;

// Rule Config
ruleConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigAccess().getConfigAction_0(),
					$current);
			}
		)
		otherlv_1='Config'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigAccess().getConfigKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					lv_hasMinImprovement_3_0='minImprovement'
					{
						newLeafNode(lv_hasMinImprovement_3_0, grammarAccess.getConfigAccess().getHasMinImprovementMinImprovementKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigRule());
						}
						setWithLastConsumed($current, "hasMinImprovement", true, "minImprovement");
					}
				)
			)
			(
				(
					lv_minImprovement_4_0=RULE_NUMBER
					{
						newLeafNode(lv_minImprovement_4_0, grammarAccess.getConfigAccess().getMinImprovementNUMBERTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigRule());
						}
						setWithLastConsumed(
							$current,
							"minImprovement",
							lv_minImprovement_4_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.NUMBER");
					}
				)
			)
		)?
		(
			(
				(
					lv_hasMaxDegression_5_0='maxDegression'
					{
						newLeafNode(lv_hasMaxDegression_5_0, grammarAccess.getConfigAccess().getHasMaxDegressionMaxDegressionKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigRule());
						}
						setWithLastConsumed($current, "hasMaxDegression", true, "maxDegression");
					}
				)
			)
			(
				(
					lv_maxDegression_6_0=RULE_NUMBER
					{
						newLeafNode(lv_maxDegression_6_0, grammarAccess.getConfigAccess().getMaxDegressionNUMBERTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigRule());
						}
						setWithLastConsumed(
							$current,
							"maxDegression",
							lv_maxDegression_6_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.NUMBER");
					}
				)
			)
		)?
		(
			(
				(
					lv_haxMaxThings_7_0='maxThings'
					{
						newLeafNode(lv_haxMaxThings_7_0, grammarAccess.getConfigAccess().getHaxMaxThingsMaxThingsKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigRule());
						}
						setWithLastConsumed($current, "haxMaxThings", true, "maxThings");
					}
				)
			)
			(
				(
					lv_maxThings_8_0=RULE_INT
					{
						newLeafNode(lv_maxThings_8_0, grammarAccess.getConfigAccess().getMaxThingsINTTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigRule());
						}
						setWithLastConsumed(
							$current,
							"maxThings",
							lv_maxThings_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getImportAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleTemplateDef
entryRuleTemplateDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateDefRule()); }
	iv_ruleTemplateDef=ruleTemplateDef
	{ $current=$iv_ruleTemplateDef.current; }
	EOF;

// Rule TemplateDef
ruleTemplateDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='template'
		{
			newLeafNode(otherlv_0, grammarAccess.getTemplateDefAccess().getTemplateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTemplateDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTemplateDefAccess().getColonKeyword_2());
		}
		(
			(
				lv_javaClass_3_0=RULE_QUALIFIEDNAME
				{
					newLeafNode(lv_javaClass_3_0, grammarAccess.getTemplateDefAccess().getJavaClassQUALIFIEDNAMETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateDefRule());
					}
					setWithLastConsumed(
						$current,
						"javaClass",
						lv_javaClass_3_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.QUALIFIEDNAME");
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getTemplateDefAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleTemplateGenDef
entryRuleTemplateGenDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateGenDefRule()); }
	iv_ruleTemplateGenDef=ruleTemplateGenDef
	{ $current=$iv_ruleTemplateGenDef.current; }
	EOF;

// Rule TemplateGenDef
ruleTemplateGenDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='templateGen'
		{
			newLeafNode(otherlv_0, grammarAccess.getTemplateGenDefAccess().getTemplateGenKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTemplateGenDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateGenDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='extends'
			{
				newLeafNode(otherlv_2, grammarAccess.getTemplateGenDefAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTemplateGenDefRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getTemplateGenDefAccess().getSuperRuleTemplateRuleOrDefCrossReference_2_1_0());
					}
				)
			)
		)?
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getTemplateGenDefAccess().getColonKeyword_3_0());
			}
			(
				(
					lv_javaClass_5_0=RULE_QUALIFIEDNAME
					{
						newLeafNode(lv_javaClass_5_0, grammarAccess.getTemplateGenDefAccess().getJavaClassQUALIFIEDNAMETerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTemplateGenDefRule());
						}
						setWithLastConsumed(
							$current,
							"javaClass",
							lv_javaClass_5_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.QUALIFIEDNAME");
					}
				)
			)
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getTemplateGenDefAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleTemplateRule
entryRuleTemplateRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateRuleRule()); }
	iv_ruleTemplateRule=ruleTemplateRule
	{ $current=$iv_ruleTemplateRule.current; }
	EOF;

// Rule TemplateRule
ruleTemplateRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemplateRuleAccess().getBasicTemplateRuleParserRuleCall_0());
		}
		this_BasicTemplateRule_0=ruleBasicTemplateRule
		{
			$current = $this_BasicTemplateRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTemplateRuleAccess().getTemplateGeneratorRuleParserRuleCall_1());
		}
		this_TemplateGeneratorRule_1=ruleTemplateGeneratorRule
		{
			$current = $this_TemplateGeneratorRule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicTemplateRule
entryRuleBasicTemplateRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicTemplateRuleRule()); }
	iv_ruleBasicTemplateRule=ruleBasicTemplateRule
	{ $current=$iv_ruleBasicTemplateRule.current; }
	EOF;

// Rule BasicTemplateRule
ruleBasicTemplateRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='javarule'
		{
			newLeafNode(otherlv_0, grammarAccess.getBasicTemplateRuleAccess().getJavaruleKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTemplateRuleRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getBasicTemplateRuleAccess().getTypeTemplateDefCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getBasicTemplateRuleAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTemplateRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='::'
			{
				newLeafNode(otherlv_3, grammarAccess.getBasicTemplateRuleAccess().getColonColonKeyword_3_0());
			}
			(
				(
					lv_groups_4_0=RULE_ID
					{
						newLeafNode(lv_groups_4_0, grammarAccess.getBasicTemplateRuleAccess().getGroupsIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBasicTemplateRuleRule());
						}
						addWithLastConsumed(
							$current,
							"groups",
							lv_groups_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)+
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getBasicTemplateRuleAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleTemplateGeneratorRule
entryRuleTemplateGeneratorRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateGeneratorRuleRule()); }
	iv_ruleTemplateGeneratorRule=ruleTemplateGeneratorRule
	{ $current=$iv_ruleTemplateGeneratorRule.current; }
	EOF;

// Rule TemplateGeneratorRule
ruleTemplateGeneratorRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getTemplateGeneratorRuleAccess().getRuleKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateGeneratorRuleRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTemplateGeneratorRuleAccess().getTypeTemplateGenDefCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTemplateGeneratorRuleAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateGeneratorRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='::'
			{
				newLeafNode(otherlv_3, grammarAccess.getTemplateGeneratorRuleAccess().getColonColonKeyword_3_0());
			}
			(
				(
					lv_groups_4_0=RULE_ID
					{
						newLeafNode(lv_groups_4_0, grammarAccess.getTemplateGeneratorRuleAccess().getGroupsIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTemplateGeneratorRuleRule());
						}
						addWithLastConsumed(
							$current,
							"groups",
							lv_groups_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)+
		)?
		(
			otherlv_5='with'
			{
				newLeafNode(otherlv_5, grammarAccess.getTemplateGeneratorRuleAccess().getWithKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateGeneratorRuleAccess().getTypeDefTypeDefParserRuleCall_4_1_0_0());
						}
						lv_typeDef_6_0=ruleTypeDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateGeneratorRuleRule());
							}
							add(
								$current,
								"typeDef",
								lv_typeDef_6_0,
								"uk.ac.york.cs.ecss.language.EcssLanguage.TypeDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getTemplateGeneratorRuleAccess().getCommaKeyword_4_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getTemplateGeneratorRuleAccess().getTypeDefTypeDefParserRuleCall_4_1_1_1_0());
							}
							lv_typeDef_8_0=ruleTypeDef
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTemplateGeneratorRuleRule());
								}
								add(
									$current,
									"typeDef",
									lv_typeDef_8_0,
									"uk.ac.york.cs.ecss.language.EcssLanguage.TypeDef");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)?
		(
			(
				otherlv_9='id'
				{
					newLeafNode(otherlv_9, grammarAccess.getTemplateGeneratorRuleAccess().getIdKeyword_5_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateGeneratorRuleAccess().getIdPartTemplateRulePartParserRuleCall_5_0_1_0());
						}
						lv_idPart_10_0=ruleTemplateRulePart
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateGeneratorRuleRule());
							}
							add(
								$current,
								"idPart",
								lv_idPart_10_0,
								"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateRulePart");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_11='{'
				{
					newLeafNode(otherlv_11, grammarAccess.getTemplateGeneratorRuleAccess().getLeftCurlyBracketKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateGeneratorRuleAccess().getIdPartTemplateRulePartParserRuleCall_5_1_1_0());
						}
						lv_idPart_12_0=ruleTemplateRulePart
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateGeneratorRuleRule());
							}
							add(
								$current,
								"idPart",
								lv_idPart_12_0,
								"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateRulePart");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_13='}'
				{
					newLeafNode(otherlv_13, grammarAccess.getTemplateGeneratorRuleAccess().getRightCurlyBracketKeyword_5_1_2());
				}
			)
		)?
		(
			otherlv_14=':'
			{
				newLeafNode(otherlv_14, grammarAccess.getTemplateGeneratorRuleAccess().getColonKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTemplateGeneratorRuleAccess().getTemplateRulePartTemplateRulePartParserRuleCall_6_1_0());
					}
					lv_templateRulePart_15_0=ruleTemplateRulePart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemplateGeneratorRuleRule());
						}
						add(
							$current,
							"templateRulePart",
							lv_templateRulePart_15_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateRulePart");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_16=';'
		{
			newLeafNode(otherlv_16, grammarAccess.getTemplateGeneratorRuleAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current; }
	EOF;

// Rule TypeDef
ruleTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0=RULE_ID
				{
					newLeafNode(lv_type_0_0, grammarAccess.getTypeDefAccess().getTypeIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTemplateRulePart
entryRuleTemplateRulePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateRulePartRule()); }
	iv_ruleTemplateRulePart=ruleTemplateRulePart
	{ $current=$iv_ruleTemplateRulePart.current; }
	EOF;

// Rule TemplateRulePart
ruleTemplateRulePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemplateRulePartAccess().getTemplateFunctionCallParserRuleCall_0());
		}
		this_TemplateFunctionCall_0=ruleTemplateFunctionCall
		{
			$current = $this_TemplateFunctionCall_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTemplateRulePartAccess().getLocalEvaluationCallParserRuleCall_1());
		}
		this_LocalEvaluationCall_1=ruleLocalEvaluationCall
		{
			$current = $this_LocalEvaluationCall_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTemplateRulePartAccess().getLocalOrValueCallParserRuleCall_2());
		}
		this_LocalOrValueCall_2=ruleLocalOrValueCall
		{
			$current = $this_LocalOrValueCall_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTemplateRulePartAccess().getStaticTemplateRulePartParserRuleCall_3());
		}
		this_StaticTemplateRulePart_3=ruleStaticTemplateRulePart
		{
			$current = $this_StaticTemplateRulePart_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTemplateRulePartAccess().getEvaluationCallParserRuleCall_4());
		}
		this_EvaluationCall_4=ruleEvaluationCall
		{
			$current = $this_EvaluationCall_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTemplateRulePartAccess().getSlotCallParserRuleCall_5());
		}
		this_SlotCall_5=ruleSlotCall
		{
			$current = $this_SlotCall_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTemplateRulePartAccess().getForEachExpressionParserRuleCall_6());
		}
		this_ForEachExpression_6=ruleForEachExpression
		{
			$current = $this_ForEachExpression_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTemplateRulePartAccess().getIfExpressionParserRuleCall_7());
		}
		this_IfExpression_7=ruleIfExpression
		{
			$current = $this_IfExpression_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleForEachExpression
entryRuleForEachExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForEachExpressionRule()); }
	iv_ruleForEachExpression=ruleForEachExpression
	{ $current=$iv_ruleForEachExpression.current; }
	EOF;

// Rule ForEachExpression
ruleForEachExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForEachExpressionAccess().getForKeyword_0());
		}
		(
			(
				lv_type_1_0=RULE_ID
				{
					newLeafNode(lv_type_1_0, grammarAccess.getForEachExpressionAccess().getTypeIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForEachExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			(
				lv_variable_2_0=RULE_ID
				{
					newLeafNode(lv_variable_2_0, grammarAccess.getForEachExpressionAccess().getVariableIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForEachExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"variable",
						lv_variable_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getForEachExpressionAccess().getColonKeyword_3());
		}
		(
			(
				(
					lv_exprVar_4_0=RULE_ID
					{
						newLeafNode(lv_exprVar_4_0, grammarAccess.getForEachExpressionAccess().getExprVarIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForEachExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprVar",
							lv_exprVar_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			(
				(
					lv_completeExpr_5_0=RULE_STRING
					{
						newLeafNode(lv_completeExpr_5_0, grammarAccess.getForEachExpressionAccess().getCompleteExprSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForEachExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"completeExpr",
							lv_completeExpr_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			otherlv_6='join'
			{
				newLeafNode(otherlv_6, grammarAccess.getForEachExpressionAccess().getJoinKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForEachExpressionAccess().getJoinTemplateRulePartParserRuleCall_5_1_0());
					}
					lv_join_7_0=ruleTemplateRulePart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForEachExpressionRule());
						}
						add(
							$current,
							"join",
							lv_join_7_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateRulePart");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getForEachExpressionAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachExpressionAccess().getBodyTemplateRulePartParserRuleCall_7_0());
				}
				lv_body_9_0=ruleTemplateRulePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachExpressionRule());
					}
					add(
						$current,
						"body",
						lv_body_9_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateRulePart");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getForEachExpressionAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleIfExpression
entryRuleIfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfExpressionRule()); }
	iv_ruleIfExpression=ruleIfExpression
	{ $current=$iv_ruleIfExpression.current; }
	EOF;

// Rule IfExpression
ruleIfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfExpressionAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_val_2_0=RULE_ID
				{
					newLeafNode(lv_val_2_0, grammarAccess.getIfExpressionAccess().getValIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIfExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"val",
						lv_val_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpressionAccess().getThenTemplateRulePartParserRuleCall_5_0());
				}
				lv_then_5_0=ruleTemplateRulePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
					}
					add(
						$current,
						"then",
						lv_then_5_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateRulePart");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_7='else'
			{
				newLeafNode(otherlv_7, grammarAccess.getIfExpressionAccess().getElseKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfExpressionAccess().getElseTemplateRulePartParserRuleCall_7_2_0());
					}
					lv_else_9_0=ruleTemplateRulePart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
						}
						add(
							$current,
							"else",
							lv_else_9_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateRulePart");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleStaticTemplateRulePart
entryRuleStaticTemplateRulePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaticTemplateRulePartRule()); }
	iv_ruleStaticTemplateRulePart=ruleStaticTemplateRulePart
	{ $current=$iv_ruleStaticTemplateRulePart.current; }
	EOF;

// Rule StaticTemplateRulePart
ruleStaticTemplateRulePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStaticTemplateRulePartAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStaticTemplateRulePartRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleTemplateFunctionCall
entryRuleTemplateFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateFunctionCallRule()); }
	iv_ruleTemplateFunctionCall=ruleTemplateFunctionCall
	{ $current=$iv_ruleTemplateFunctionCall.current; }
	EOF;

// Rule TemplateFunctionCall
ruleTemplateFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$'
		{
			newLeafNode(otherlv_0, grammarAccess.getTemplateFunctionCallAccess().getDollarSignKeyword_0());
		}
		(
			(
				lv_isReference_1_0='@'
				{
					newLeafNode(lv_isReference_1_0, grammarAccess.getTemplateFunctionCallAccess().getIsReferenceCommercialAtKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateFunctionCallRule());
					}
					setWithLastConsumed($current, "isReference", true, "@");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTemplateFunctionCallAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateFunctionCallRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getTemplateFunctionCallAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTemplateFunctionCallAccess().getParValueTemplateParameterValueParserRuleCall_4_0_0());
					}
					lv_parValue_4_0=ruleTemplateParameterValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemplateFunctionCallRule());
						}
						add(
							$current,
							"parValue",
							lv_parValue_4_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateParameterValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getTemplateFunctionCallAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateFunctionCallAccess().getParValueTemplateParameterValueParserRuleCall_4_1_1_0());
						}
						lv_parValue_6_0=ruleTemplateParameterValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateFunctionCallRule());
							}
							add(
								$current,
								"parValue",
								lv_parValue_6_0,
								"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateParameterValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getTemplateFunctionCallAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleSlotCall
entryRuleSlotCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSlotCallRule()); }
	iv_ruleSlotCall=ruleSlotCall
	{ $current=$iv_ruleSlotCall.current; }
	EOF;

// Rule SlotCall
ruleSlotCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='\u00A7'
		{
			newLeafNode(otherlv_0, grammarAccess.getSlotCallAccess().getSectionSignKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSlotCallAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSlotCallRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getSlotCallAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					lv_minValue_3_0=RULE_INT
					{
						newLeafNode(lv_minValue_3_0, grammarAccess.getSlotCallAccess().getMinValueINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSlotCallRule());
						}
						setWithLastConsumed(
							$current,
							"minValue",
							lv_minValue_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				otherlv_4='..'
				{
					newLeafNode(otherlv_4, grammarAccess.getSlotCallAccess().getFullStopFullStopKeyword_2_2_0());
				}
				(
					(
						lv_maxValue_5_0=RULE_INT
						{
							newLeafNode(lv_maxValue_5_0, grammarAccess.getSlotCallAccess().getMaxValueINTTerminalRuleCall_2_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSlotCallRule());
							}
							setWithLastConsumed(
								$current,
								"maxValue",
								lv_maxValue_5_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getSlotCallAccess().getRightSquareBracketKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleLocalOrValueCall
entryRuleLocalOrValueCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalOrValueCallRule()); }
	iv_ruleLocalOrValueCall=ruleLocalOrValueCall
	{ $current=$iv_ruleLocalOrValueCall.current; }
	EOF;

// Rule LocalOrValueCall
ruleLocalOrValueCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocalOrValueCallAccess().getDollarSignKeyword_0());
		}
		(
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getLocalOrValueCallAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLocalOrValueCallRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			(
				(
					lv_name_2_0=RULE_QUALIFIEDNAME
					{
						newLeafNode(lv_name_2_0, grammarAccess.getLocalOrValueCallAccess().getNameQUALIFIEDNAMETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLocalOrValueCallRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.QUALIFIEDNAME");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLocalEvaluationCall
entryRuleLocalEvaluationCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalEvaluationCallRule()); }
	iv_ruleLocalEvaluationCall=ruleLocalEvaluationCall
	{ $current=$iv_ruleLocalEvaluationCall.current; }
	EOF;

// Rule LocalEvaluationCall
ruleLocalEvaluationCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$#'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocalEvaluationCallAccess().getDollarSignNumberSignKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getLocalEvaluationCallAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalEvaluationCallRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTemplateParameterValue
entryRuleTemplateParameterValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateParameterValueRule()); }
	iv_ruleTemplateParameterValue=ruleTemplateParameterValue
	{ $current=$iv_ruleTemplateParameterValue.current; }
	EOF;

// Rule TemplateParameterValue
ruleTemplateParameterValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='$'
			{
				newLeafNode(otherlv_0, grammarAccess.getTemplateParameterValueAccess().getDollarSignKeyword_0_0());
			}
			(
				(
					lv_propName_1_0=RULE_ID
					{
						newLeafNode(lv_propName_1_0, grammarAccess.getTemplateParameterValueAccess().getPropNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTemplateParameterValueRule());
						}
						setWithLastConsumed(
							$current,
							"propName",
							lv_propName_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				lv_varName_2_0=RULE_ID
				{
					newLeafNode(lv_varName_2_0, grammarAccess.getTemplateParameterValueAccess().getVarNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateParameterValueRule());
					}
					setWithLastConsumed(
						$current,
						"varName",
						lv_varName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			otherlv_3='\u00A7'
			{
				newLeafNode(otherlv_3, grammarAccess.getTemplateParameterValueAccess().getSectionSignKeyword_2_0());
			}
			(
				(
					lv_slotName_4_0=RULE_ID
					{
						newLeafNode(lv_slotName_4_0, grammarAccess.getTemplateParameterValueAccess().getSlotNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTemplateParameterValueRule());
						}
						setWithLastConsumed(
							$current,
							"slotName",
							lv_slotName_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_5='['
				{
					newLeafNode(otherlv_5, grammarAccess.getTemplateParameterValueAccess().getLeftSquareBracketKeyword_2_2_0());
				}
				(
					(
						lv_minValue_6_0=RULE_INT
						{
							newLeafNode(lv_minValue_6_0, grammarAccess.getTemplateParameterValueAccess().getMinValueINTTerminalRuleCall_2_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemplateParameterValueRule());
							}
							setWithLastConsumed(
								$current,
								"minValue",
								lv_minValue_6_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				(
					otherlv_7='..'
					{
						newLeafNode(otherlv_7, grammarAccess.getTemplateParameterValueAccess().getFullStopFullStopKeyword_2_2_2_0());
					}
					(
						(
							lv_maxValue_8_0=RULE_INT
							{
								newLeafNode(lv_maxValue_8_0, grammarAccess.getTemplateParameterValueAccess().getMaxValueINTTerminalRuleCall_2_2_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemplateParameterValueRule());
								}
								setWithLastConsumed(
									$current,
									"maxValue",
									lv_maxValue_8_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
				)
				otherlv_9=']'
				{
					newLeafNode(otherlv_9, grammarAccess.getTemplateParameterValueAccess().getRightSquareBracketKeyword_2_2_3());
				}
			)?
		)
		    |
		(
			(
				lv_direct_10_0=RULE_STRING
				{
					newLeafNode(lv_direct_10_0, grammarAccess.getTemplateParameterValueAccess().getDirectSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateParameterValueRule());
					}
					setWithLastConsumed(
						$current,
						"direct",
						lv_direct_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleEvaluationCall
entryRuleEvaluationCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvaluationCallRule()); }
	iv_ruleEvaluationCall=ruleEvaluationCall
	{ $current=$iv_ruleEvaluationCall.current; }
	EOF;

// Rule EvaluationCall
ruleEvaluationCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvaluationCallAccess().getNumberSignKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getEvaluationCallAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvaluationCallRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulePropertyRule
entryRulePropertyRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRuleRule()); }
	iv_rulePropertyRule=rulePropertyRule
	{ $current=$iv_rulePropertyRule.current; }
	EOF;

// Rule PropertyRule
rulePropertyRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPropertyRuleAccess().getPropertyRuleAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyRuleAccess().getSelectorSelectorParserRuleCall_1_0());
				}
				lv_selector_1_0=ruleSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRuleRule());
					}
					set(
						$current,
						"selector",
						lv_selector_1_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.Selector");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPropertyRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyRuleAccess().getPropertyPropertyParserRuleCall_3_0());
				}
				lv_property_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRuleRule());
					}
					add(
						$current,
						"property",
						lv_property_3_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPropertyRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	iv_ruleSelector=ruleSelector
	{ $current=$iv_ruleSelector.current; }
	EOF;

// Rule Selector
ruleSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSelectorAccess().getSelectorsSingleSelectorParserRuleCall_0());
			}
			lv_selectors_0_0=ruleSingleSelector
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSelectorRule());
				}
				add(
					$current,
					"selectors",
					lv_selectors_0_0,
					"uk.ac.york.cs.ecss.language.EcssLanguage.SingleSelector");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleSingleSelector
entryRuleSingleSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleSelectorRule()); }
	iv_ruleSingleSelector=ruleSingleSelector
	{ $current=$iv_ruleSingleSelector.current; }
	EOF;

// Rule SingleSelector
ruleSingleSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_allTypes_0_0='*'
					{
						newLeafNode(lv_allTypes_0_0, grammarAccess.getSingleSelectorAccess().getAllTypesAsteriskKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSingleSelectorRule());
						}
						setWithLastConsumed($current, "allTypes", true, "*");
					}
				)
			)
			    |
			(
				(
					(
						lv_referredName_1_1=RULE_ID
						{
							newLeafNode(lv_referredName_1_1, grammarAccess.getSingleSelectorAccess().getReferredNameIDTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSingleSelectorRule());
							}
							setWithLastConsumed(
								$current,
								"referredName",
								lv_referredName_1_1,
								"org.eclipse.xtext.common.Terminals.ID");
						}
						    |
						lv_referredName_1_2=RULE_STRING
						{
							newLeafNode(lv_referredName_1_2, grammarAccess.getSingleSelectorAccess().getReferredNameSTRINGTerminalRuleCall_0_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSingleSelectorRule());
							}
							setWithLastConsumed(
								$current,
								"referredName",
								lv_referredName_1_2,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleSelectorAccess().getConditionConditionParserRuleCall_1_0());
				}
				lv_condition_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleSelectorRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulePossiblySignedNumber
entryRulePossiblySignedNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPossiblySignedNumberRule()); }
	iv_rulePossiblySignedNumber=rulePossiblySignedNumber
	{ $current=$iv_rulePossiblySignedNumber.current.getText(); }
	EOF;

// Rule PossiblySignedNumber
rulePossiblySignedNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPossiblySignedNumberAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_NUMBER_1=RULE_NUMBER
		{
			$current.merge(this_NUMBER_1);
		}
		{
			newLeafNode(this_NUMBER_1, grammarAccess.getPossiblySignedNumberAccess().getNUMBERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getTemplateMatchTemplateMatchParserRuleCall_0_0_0());
					}
					lv_templateMatch_0_0=ruleTemplateMatch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"templateMatch",
							lv_templateMatch_0_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.TemplateMatch");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getSlotMatchSlotMatchParserRuleCall_0_1_0());
					}
					lv_slotMatch_1_0=ruleSlotMatch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"slotMatch",
							lv_slotMatch_1_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.SlotMatch");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_name_2_1=RULE_ID
						{
							newLeafNode(lv_name_2_1, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPropertyRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_2_1,
								"org.eclipse.xtext.common.Terminals.ID");
						}
						    |
						lv_name_2_2=RULE_STRING
						{
							newLeafNode(lv_name_2_2, grammarAccess.getPropertyAccess().getNameSTRINGTerminalRuleCall_0_2_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPropertyRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_2_2,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getConditionConditionParserRuleCall_1_0());
				}
				lv_condition_3_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"condition",
						lv_condition_3_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getPropertyAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getValuePropertyValueParserRuleCall_3_0());
				}
				lv_value_5_0=rulePropertyValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					add(
						$current,
						"value",
						lv_value_5_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.PropertyValue");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getPropertyAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleTemplateMatch
entryRuleTemplateMatch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateMatchRule()); }
	iv_ruleTemplateMatch=ruleTemplateMatch
	{ $current=$iv_ruleTemplateMatch.current; }
	EOF;

// Rule TemplateMatch
ruleTemplateMatch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='template'
		{
			newLeafNode(otherlv_0, grammarAccess.getTemplateMatchAccess().getTemplateKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTemplateMatchAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateMatchAccess().getSelectorSingleSelectorParserRuleCall_2_0());
				}
				lv_selector_2_0=ruleSingleSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateMatchRule());
					}
					set(
						$current,
						"selector",
						lv_selector_2_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.SingleSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTemplateMatchAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSlotMatch
entryRuleSlotMatch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSlotMatchRule()); }
	iv_ruleSlotMatch=ruleSlotMatch
	{ $current=$iv_ruleSlotMatch.current; }
	EOF;

// Rule SlotMatch
ruleSlotMatch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='slot'
		{
			newLeafNode(otherlv_0, grammarAccess.getSlotMatchAccess().getSlotKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSlotMatchAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSlotMatchAccess().getFirstSingleSelectorParserRuleCall_2_0());
				}
				lv_first_2_0=ruleSingleSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSlotMatchRule());
					}
					set(
						$current,
						"first",
						lv_first_2_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.SingleSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getSlotMatchAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSlotMatchAccess().getSecondSingleSelectorParserRuleCall_4_0());
				}
				lv_second_4_0=ruleSingleSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSlotMatchRule());
					}
					set(
						$current,
						"second",
						lv_second_4_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.SingleSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getSlotMatchAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRulePropertyValue
entryRulePropertyValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyValueRule()); }
	iv_rulePropertyValue=rulePropertyValue
	{ $current=$iv_rulePropertyValue.current; }
	EOF;

// Rule PropertyValue
rulePropertyValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_value_0_0=RULE_ID
					{
						newLeafNode(lv_value_0_0, grammarAccess.getPropertyValueAccess().getValueIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyValueRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			(
				(
					lv_value_1_0=RULE_STRING
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPropertyValueAccess().getValueSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyValueRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyValueAccess().getValueNumbPossiblySignedNumberParserRuleCall_0_2_0());
					}
					lv_valueNumb_2_0=rulePossiblySignedNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyValueRule());
						}
						set(
							$current,
							"valueNumb",
							lv_valueNumb_2_0,
							"uk.ac.york.cs.ecss.language.EcssLanguage.PossiblySignedNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='ocl'
				{
					newLeafNode(otherlv_3, grammarAccess.getPropertyValueAccess().getOclKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyValueAccess().getOclvalueSpecificationCSParserRuleCall_0_3_1_0());
						}
						lv_oclvalue_4_0=ruleSpecificationCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyValueRule());
							}
							set(
								$current,
								"oclvalue",
								lv_oclvalue_4_0,
								"uk.ac.york.cs.ecss.language.EcssLanguage.SpecificationCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				(
					lv_hasProperty_5_0='('
					{
						newLeafNode(lv_hasProperty_5_0, grammarAccess.getPropertyValueAccess().getHasPropertyLeftParenthesisKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyValueRule());
						}
						setWithLastConsumed($current, "hasProperty", true, "(");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyValueAccess().getArgumentPropertyValueParserRuleCall_1_1_0_0());
						}
						lv_argument_6_0=rulePropertyValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyValueRule());
							}
							add(
								$current,
								"argument",
								lv_argument_6_0,
								"uk.ac.york.cs.ecss.language.EcssLanguage.PropertyValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getPropertyValueAccess().getCommaKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPropertyValueAccess().getArgumentPropertyValueParserRuleCall_1_1_1_1_0());
							}
							lv_argument_8_0=rulePropertyValue
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropertyValueRule());
								}
								add(
									$current,
									"argument",
									lv_argument_8_0,
									"uk.ac.york.cs.ecss.language.EcssLanguage.PropertyValue");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getPropertyValueAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getExpressionSpecificationCSParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleSpecificationCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"uk.ac.york.cs.ecss.language.EcssLanguage.SpecificationCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleSpecificationCS
entryRuleSpecificationCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationCSRule()); }
	iv_ruleSpecificationCS=ruleSpecificationCS
	{ $current=$iv_ruleSpecificationCS.current; }
	EOF;

// Rule SpecificationCS
ruleSpecificationCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_ownedExpression_0_0=RULE_STRING
			{
				newLeafNode(lv_ownedExpression_0_0, grammarAccess.getSpecificationCSAccess().getOwnedExpressionSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSpecificationCSRule());
				}
				setWithLastConsumed(
					$current,
					"ownedExpression",
					lv_ownedExpression_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

RULE_QUALIFIEDNAME : RULE_ID ('.' RULE_ID)+;

RULE_NUMBER : RULE_INT '.' RULE_INT?;

RULE_TEST1 : 'test1';

RULE_TEST3 : 'test3';

RULE_TEST2 : 'test2';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
