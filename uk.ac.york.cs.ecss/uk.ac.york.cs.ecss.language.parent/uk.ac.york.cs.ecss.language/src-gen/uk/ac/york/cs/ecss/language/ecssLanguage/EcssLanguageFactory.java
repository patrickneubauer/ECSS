/**
 * generated by Xtext 2.15.0
 */
package uk.ac.york.cs.ecss.language.ecssLanguage;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage
 * @generated
 */
public interface EcssLanguageFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  EcssLanguageFactory eINSTANCE = uk.ac.york.cs.ecss.language.ecssLanguage.impl.EcssLanguageFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Config</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Config</em>'.
   * @generated
   */
  Config createConfig();

  /**
   * Returns a new object of class '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Import</em>'.
   * @generated
   */
  Import createImport();

  /**
   * Returns a new object of class '<em>Template Rule Or Def</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Rule Or Def</em>'.
   * @generated
   */
  TemplateRuleOrDef createTemplateRuleOrDef();

  /**
   * Returns a new object of class '<em>Template Def</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Def</em>'.
   * @generated
   */
  TemplateDef createTemplateDef();

  /**
   * Returns a new object of class '<em>Template Gen Def</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Gen Def</em>'.
   * @generated
   */
  TemplateGenDef createTemplateGenDef();

  /**
   * Returns a new object of class '<em>Template Rule</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Rule</em>'.
   * @generated
   */
  TemplateRule createTemplateRule();

  /**
   * Returns a new object of class '<em>Basic Template Rule</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Basic Template Rule</em>'.
   * @generated
   */
  BasicTemplateRule createBasicTemplateRule();

  /**
   * Returns a new object of class '<em>Template Generator Rule</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Generator Rule</em>'.
   * @generated
   */
  TemplateGeneratorRule createTemplateGeneratorRule();

  /**
   * Returns a new object of class '<em>Type Def</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Type Def</em>'.
   * @generated
   */
  TypeDef createTypeDef();

  /**
   * Returns a new object of class '<em>Template Rule Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Rule Part</em>'.
   * @generated
   */
  TemplateRulePart createTemplateRulePart();

  /**
   * Returns a new object of class '<em>For Each Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>For Each Expression</em>'.
   * @generated
   */
  ForEachExpression createForEachExpression();

  /**
   * Returns a new object of class '<em>If Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>If Expression</em>'.
   * @generated
   */
  IfExpression createIfExpression();

  /**
   * Returns a new object of class '<em>Static Template Rule Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Static Template Rule Part</em>'.
   * @generated
   */
  StaticTemplateRulePart createStaticTemplateRulePart();

  /**
   * Returns a new object of class '<em>Template Function Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Function Call</em>'.
   * @generated
   */
  TemplateFunctionCall createTemplateFunctionCall();

  /**
   * Returns a new object of class '<em>Slot Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Slot Call</em>'.
   * @generated
   */
  SlotCall createSlotCall();

  /**
   * Returns a new object of class '<em>Local Or Value Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Local Or Value Call</em>'.
   * @generated
   */
  LocalOrValueCall createLocalOrValueCall();

  /**
   * Returns a new object of class '<em>Local Evaluation Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Local Evaluation Call</em>'.
   * @generated
   */
  LocalEvaluationCall createLocalEvaluationCall();

  /**
   * Returns a new object of class '<em>Template Parameter Value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Parameter Value</em>'.
   * @generated
   */
  TemplateParameterValue createTemplateParameterValue();

  /**
   * Returns a new object of class '<em>Evaluation Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Evaluation Call</em>'.
   * @generated
   */
  EvaluationCall createEvaluationCall();

  /**
   * Returns a new object of class '<em>Property Rule</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Property Rule</em>'.
   * @generated
   */
  PropertyRule createPropertyRule();

  /**
   * Returns a new object of class '<em>Selector</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Selector</em>'.
   * @generated
   */
  Selector createSelector();

  /**
   * Returns a new object of class '<em>Single Selector</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Single Selector</em>'.
   * @generated
   */
  SingleSelector createSingleSelector();

  /**
   * Returns a new object of class '<em>Property</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Property</em>'.
   * @generated
   */
  Property createProperty();

  /**
   * Returns a new object of class '<em>Template Match</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Template Match</em>'.
   * @generated
   */
  TemplateMatch createTemplateMatch();

  /**
   * Returns a new object of class '<em>Slot Match</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Slot Match</em>'.
   * @generated
   */
  SlotMatch createSlotMatch();

  /**
   * Returns a new object of class '<em>Property Value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Property Value</em>'.
   * @generated
   */
  PropertyValue createPropertyValue();

  /**
   * Returns a new object of class '<em>Condition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Condition</em>'.
   * @generated
   */
  Condition createCondition();

  /**
   * Returns a new object of class '<em>Specification CS</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Specification CS</em>'.
   * @generated
   */
  SpecificationCS createSpecificationCS();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  EcssLanguagePackage getEcssLanguagePackage();

} //EcssLanguageFactory
