/**
 * generated by Xtext 2.15.0
 */
package uk.ac.york.cs.ecss.language.ecssLanguage.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import uk.ac.york.cs.ecss.language.ecssLanguage.BasicTemplateRule;
import uk.ac.york.cs.ecss.language.ecssLanguage.Condition;
import uk.ac.york.cs.ecss.language.ecssLanguage.Config;
import uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguageFactory;
import uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage;
import uk.ac.york.cs.ecss.language.ecssLanguage.EvaluationCall;
import uk.ac.york.cs.ecss.language.ecssLanguage.ForEachExpression;
import uk.ac.york.cs.ecss.language.ecssLanguage.IfExpression;
import uk.ac.york.cs.ecss.language.ecssLanguage.Import;
import uk.ac.york.cs.ecss.language.ecssLanguage.LocalEvaluationCall;
import uk.ac.york.cs.ecss.language.ecssLanguage.LocalOrValueCall;
import uk.ac.york.cs.ecss.language.ecssLanguage.Model;
import uk.ac.york.cs.ecss.language.ecssLanguage.Property;
import uk.ac.york.cs.ecss.language.ecssLanguage.PropertyRule;
import uk.ac.york.cs.ecss.language.ecssLanguage.PropertyValue;
import uk.ac.york.cs.ecss.language.ecssLanguage.Selector;
import uk.ac.york.cs.ecss.language.ecssLanguage.SingleSelector;
import uk.ac.york.cs.ecss.language.ecssLanguage.SlotCall;
import uk.ac.york.cs.ecss.language.ecssLanguage.SlotMatch;
import uk.ac.york.cs.ecss.language.ecssLanguage.SpecificationCS;
import uk.ac.york.cs.ecss.language.ecssLanguage.StaticTemplateRulePart;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateDef;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateFunctionCall;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateGenDef;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateGeneratorRule;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateMatch;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateParameterValue;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateRule;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateRuleOrDef;
import uk.ac.york.cs.ecss.language.ecssLanguage.TemplateRulePart;
import uk.ac.york.cs.ecss.language.ecssLanguage.TypeDef;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class EcssLanguagePackageImpl extends EPackageImpl implements EcssLanguagePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass configEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateRuleOrDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateGenDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass basicTemplateRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateGeneratorRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateRulePartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass forEachExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ifExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass staticTemplateRulePartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateFunctionCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass slotCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localOrValueCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localEvaluationCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateParameterValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass evaluationCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass propertyRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass singleSelectorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass propertyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateMatchEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass slotMatchEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass propertyValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass specificationCSEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private EcssLanguagePackageImpl()
  {
    super(eNS_URI, EcssLanguageFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link EcssLanguagePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static EcssLanguagePackage init()
  {
    if (isInited) return (EcssLanguagePackage)EPackage.Registry.INSTANCE.getEPackage(EcssLanguagePackage.eNS_URI);

    // Obtain or create and register package
    EcssLanguagePackageImpl theEcssLanguagePackage = (EcssLanguagePackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof EcssLanguagePackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new EcssLanguagePackageImpl());

    isInited = true;

    // Create package meta-data objects
    theEcssLanguagePackage.createPackageContents();

    // Initialize created meta-data
    theEcssLanguagePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theEcssLanguagePackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(EcssLanguagePackage.eNS_URI, theEcssLanguagePackage);
    return theEcssLanguagePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Config()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_ImportStatement()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_TemplateDefs()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_TemplateGenDefs()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Templates()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Properties()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConfig()
  {
    return configEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConfig_HasMinImprovement()
  {
    return (EAttribute)configEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConfig_MinImprovement()
  {
    return (EAttribute)configEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConfig_HasMaxDegression()
  {
    return (EAttribute)configEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConfig_MaxDegression()
  {
    return (EAttribute)configEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConfig_HaxMaxThings()
  {
    return (EAttribute)configEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConfig_MaxThings()
  {
    return (EAttribute)configEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getImport_Name()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateRuleOrDef()
  {
    return templateRuleOrDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateRuleOrDef_Name()
  {
    return (EAttribute)templateRuleOrDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateDef()
  {
    return templateDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateDef_JavaClass()
  {
    return (EAttribute)templateDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateGenDef()
  {
    return templateGenDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateGenDef_Name()
  {
    return (EAttribute)templateGenDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTemplateGenDef_SuperRule()
  {
    return (EReference)templateGenDefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateGenDef_JavaClass()
  {
    return (EAttribute)templateGenDefEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateRule()
  {
    return templateRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateRule_Groups()
  {
    return (EAttribute)templateRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBasicTemplateRule()
  {
    return basicTemplateRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBasicTemplateRule_Type()
  {
    return (EReference)basicTemplateRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateGeneratorRule()
  {
    return templateGeneratorRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTemplateGeneratorRule_Type()
  {
    return (EReference)templateGeneratorRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTemplateGeneratorRule_TypeDef()
  {
    return (EReference)templateGeneratorRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTemplateGeneratorRule_IdPart()
  {
    return (EReference)templateGeneratorRuleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTemplateGeneratorRule_TemplateRulePart()
  {
    return (EReference)templateGeneratorRuleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeDef()
  {
    return typeDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypeDef_Type()
  {
    return (EAttribute)typeDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypeDef_Name()
  {
    return (EAttribute)typeDefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateRulePart()
  {
    return templateRulePartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getForEachExpression()
  {
    return forEachExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getForEachExpression_Type()
  {
    return (EAttribute)forEachExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getForEachExpression_Variable()
  {
    return (EAttribute)forEachExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getForEachExpression_ExprVar()
  {
    return (EAttribute)forEachExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getForEachExpression_CompleteExpr()
  {
    return (EAttribute)forEachExpressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getForEachExpression_Join()
  {
    return (EReference)forEachExpressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getForEachExpression_Body()
  {
    return (EReference)forEachExpressionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIfExpression()
  {
    return ifExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getIfExpression_Val()
  {
    return (EAttribute)ifExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIfExpression_Then()
  {
    return (EReference)ifExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIfExpression_Else()
  {
    return (EReference)ifExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStaticTemplateRulePart()
  {
    return staticTemplateRulePartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStaticTemplateRulePart_Value()
  {
    return (EAttribute)staticTemplateRulePartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateFunctionCall()
  {
    return templateFunctionCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateFunctionCall_IsReference()
  {
    return (EAttribute)templateFunctionCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateFunctionCall_Name()
  {
    return (EAttribute)templateFunctionCallEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTemplateFunctionCall_ParValue()
  {
    return (EReference)templateFunctionCallEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSlotCall()
  {
    return slotCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSlotCall_Name()
  {
    return (EAttribute)slotCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSlotCall_MinValue()
  {
    return (EAttribute)slotCallEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSlotCall_MaxValue()
  {
    return (EAttribute)slotCallEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLocalOrValueCall()
  {
    return localOrValueCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLocalOrValueCall_Name()
  {
    return (EAttribute)localOrValueCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLocalEvaluationCall()
  {
    return localEvaluationCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLocalEvaluationCall_Value()
  {
    return (EAttribute)localEvaluationCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateParameterValue()
  {
    return templateParameterValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateParameterValue_PropName()
  {
    return (EAttribute)templateParameterValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateParameterValue_VarName()
  {
    return (EAttribute)templateParameterValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateParameterValue_SlotName()
  {
    return (EAttribute)templateParameterValueEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateParameterValue_MinValue()
  {
    return (EAttribute)templateParameterValueEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateParameterValue_MaxValue()
  {
    return (EAttribute)templateParameterValueEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemplateParameterValue_Direct()
  {
    return (EAttribute)templateParameterValueEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEvaluationCall()
  {
    return evaluationCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEvaluationCall_Value()
  {
    return (EAttribute)evaluationCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPropertyRule()
  {
    return propertyRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPropertyRule_Selector()
  {
    return (EReference)propertyRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPropertyRule_Property()
  {
    return (EReference)propertyRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSelector()
  {
    return selectorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSelector_Selectors()
  {
    return (EReference)selectorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSingleSelector()
  {
    return singleSelectorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSingleSelector_AllTypes()
  {
    return (EAttribute)singleSelectorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSingleSelector_ReferredName()
  {
    return (EAttribute)singleSelectorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSingleSelector_Condition()
  {
    return (EReference)singleSelectorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getProperty()
  {
    return propertyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProperty_TemplateMatch()
  {
    return (EReference)propertyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProperty_SlotMatch()
  {
    return (EReference)propertyEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getProperty_Name()
  {
    return (EAttribute)propertyEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProperty_Condition()
  {
    return (EReference)propertyEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProperty_Value()
  {
    return (EReference)propertyEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateMatch()
  {
    return templateMatchEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTemplateMatch_Selector()
  {
    return (EReference)templateMatchEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSlotMatch()
  {
    return slotMatchEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSlotMatch_First()
  {
    return (EReference)slotMatchEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSlotMatch_Second()
  {
    return (EReference)slotMatchEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPropertyValue()
  {
    return propertyValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPropertyValue_Value()
  {
    return (EAttribute)propertyValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPropertyValue_ValueNumb()
  {
    return (EAttribute)propertyValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPropertyValue_Oclvalue()
  {
    return (EReference)propertyValueEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPropertyValue_HasProperty()
  {
    return (EAttribute)propertyValueEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPropertyValue_Argument()
  {
    return (EReference)propertyValueEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCondition()
  {
    return conditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCondition_Expression()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSpecificationCS()
  {
    return specificationCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSpecificationCS_OwnedExpression()
  {
    return (EAttribute)specificationCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EcssLanguageFactory getEcssLanguageFactory()
  {
    return (EcssLanguageFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__CONFIG);
    createEReference(modelEClass, MODEL__IMPORT_STATEMENT);
    createEReference(modelEClass, MODEL__TEMPLATE_DEFS);
    createEReference(modelEClass, MODEL__TEMPLATE_GEN_DEFS);
    createEReference(modelEClass, MODEL__TEMPLATES);
    createEReference(modelEClass, MODEL__PROPERTIES);

    configEClass = createEClass(CONFIG);
    createEAttribute(configEClass, CONFIG__HAS_MIN_IMPROVEMENT);
    createEAttribute(configEClass, CONFIG__MIN_IMPROVEMENT);
    createEAttribute(configEClass, CONFIG__HAS_MAX_DEGRESSION);
    createEAttribute(configEClass, CONFIG__MAX_DEGRESSION);
    createEAttribute(configEClass, CONFIG__HAX_MAX_THINGS);
    createEAttribute(configEClass, CONFIG__MAX_THINGS);

    importEClass = createEClass(IMPORT);
    createEAttribute(importEClass, IMPORT__NAME);

    templateRuleOrDefEClass = createEClass(TEMPLATE_RULE_OR_DEF);
    createEAttribute(templateRuleOrDefEClass, TEMPLATE_RULE_OR_DEF__NAME);

    templateDefEClass = createEClass(TEMPLATE_DEF);
    createEAttribute(templateDefEClass, TEMPLATE_DEF__JAVA_CLASS);

    templateGenDefEClass = createEClass(TEMPLATE_GEN_DEF);
    createEAttribute(templateGenDefEClass, TEMPLATE_GEN_DEF__NAME);
    createEReference(templateGenDefEClass, TEMPLATE_GEN_DEF__SUPER_RULE);
    createEAttribute(templateGenDefEClass, TEMPLATE_GEN_DEF__JAVA_CLASS);

    templateRuleEClass = createEClass(TEMPLATE_RULE);
    createEAttribute(templateRuleEClass, TEMPLATE_RULE__GROUPS);

    basicTemplateRuleEClass = createEClass(BASIC_TEMPLATE_RULE);
    createEReference(basicTemplateRuleEClass, BASIC_TEMPLATE_RULE__TYPE);

    templateGeneratorRuleEClass = createEClass(TEMPLATE_GENERATOR_RULE);
    createEReference(templateGeneratorRuleEClass, TEMPLATE_GENERATOR_RULE__TYPE);
    createEReference(templateGeneratorRuleEClass, TEMPLATE_GENERATOR_RULE__TYPE_DEF);
    createEReference(templateGeneratorRuleEClass, TEMPLATE_GENERATOR_RULE__ID_PART);
    createEReference(templateGeneratorRuleEClass, TEMPLATE_GENERATOR_RULE__TEMPLATE_RULE_PART);

    typeDefEClass = createEClass(TYPE_DEF);
    createEAttribute(typeDefEClass, TYPE_DEF__TYPE);
    createEAttribute(typeDefEClass, TYPE_DEF__NAME);

    templateRulePartEClass = createEClass(TEMPLATE_RULE_PART);

    forEachExpressionEClass = createEClass(FOR_EACH_EXPRESSION);
    createEAttribute(forEachExpressionEClass, FOR_EACH_EXPRESSION__TYPE);
    createEAttribute(forEachExpressionEClass, FOR_EACH_EXPRESSION__VARIABLE);
    createEAttribute(forEachExpressionEClass, FOR_EACH_EXPRESSION__EXPR_VAR);
    createEAttribute(forEachExpressionEClass, FOR_EACH_EXPRESSION__COMPLETE_EXPR);
    createEReference(forEachExpressionEClass, FOR_EACH_EXPRESSION__JOIN);
    createEReference(forEachExpressionEClass, FOR_EACH_EXPRESSION__BODY);

    ifExpressionEClass = createEClass(IF_EXPRESSION);
    createEAttribute(ifExpressionEClass, IF_EXPRESSION__VAL);
    createEReference(ifExpressionEClass, IF_EXPRESSION__THEN);
    createEReference(ifExpressionEClass, IF_EXPRESSION__ELSE);

    staticTemplateRulePartEClass = createEClass(STATIC_TEMPLATE_RULE_PART);
    createEAttribute(staticTemplateRulePartEClass, STATIC_TEMPLATE_RULE_PART__VALUE);

    templateFunctionCallEClass = createEClass(TEMPLATE_FUNCTION_CALL);
    createEAttribute(templateFunctionCallEClass, TEMPLATE_FUNCTION_CALL__IS_REFERENCE);
    createEAttribute(templateFunctionCallEClass, TEMPLATE_FUNCTION_CALL__NAME);
    createEReference(templateFunctionCallEClass, TEMPLATE_FUNCTION_CALL__PAR_VALUE);

    slotCallEClass = createEClass(SLOT_CALL);
    createEAttribute(slotCallEClass, SLOT_CALL__NAME);
    createEAttribute(slotCallEClass, SLOT_CALL__MIN_VALUE);
    createEAttribute(slotCallEClass, SLOT_CALL__MAX_VALUE);

    localOrValueCallEClass = createEClass(LOCAL_OR_VALUE_CALL);
    createEAttribute(localOrValueCallEClass, LOCAL_OR_VALUE_CALL__NAME);

    localEvaluationCallEClass = createEClass(LOCAL_EVALUATION_CALL);
    createEAttribute(localEvaluationCallEClass, LOCAL_EVALUATION_CALL__VALUE);

    templateParameterValueEClass = createEClass(TEMPLATE_PARAMETER_VALUE);
    createEAttribute(templateParameterValueEClass, TEMPLATE_PARAMETER_VALUE__PROP_NAME);
    createEAttribute(templateParameterValueEClass, TEMPLATE_PARAMETER_VALUE__VAR_NAME);
    createEAttribute(templateParameterValueEClass, TEMPLATE_PARAMETER_VALUE__SLOT_NAME);
    createEAttribute(templateParameterValueEClass, TEMPLATE_PARAMETER_VALUE__MIN_VALUE);
    createEAttribute(templateParameterValueEClass, TEMPLATE_PARAMETER_VALUE__MAX_VALUE);
    createEAttribute(templateParameterValueEClass, TEMPLATE_PARAMETER_VALUE__DIRECT);

    evaluationCallEClass = createEClass(EVALUATION_CALL);
    createEAttribute(evaluationCallEClass, EVALUATION_CALL__VALUE);

    propertyRuleEClass = createEClass(PROPERTY_RULE);
    createEReference(propertyRuleEClass, PROPERTY_RULE__SELECTOR);
    createEReference(propertyRuleEClass, PROPERTY_RULE__PROPERTY);

    selectorEClass = createEClass(SELECTOR);
    createEReference(selectorEClass, SELECTOR__SELECTORS);

    singleSelectorEClass = createEClass(SINGLE_SELECTOR);
    createEAttribute(singleSelectorEClass, SINGLE_SELECTOR__ALL_TYPES);
    createEAttribute(singleSelectorEClass, SINGLE_SELECTOR__REFERRED_NAME);
    createEReference(singleSelectorEClass, SINGLE_SELECTOR__CONDITION);

    propertyEClass = createEClass(PROPERTY);
    createEReference(propertyEClass, PROPERTY__TEMPLATE_MATCH);
    createEReference(propertyEClass, PROPERTY__SLOT_MATCH);
    createEAttribute(propertyEClass, PROPERTY__NAME);
    createEReference(propertyEClass, PROPERTY__CONDITION);
    createEReference(propertyEClass, PROPERTY__VALUE);

    templateMatchEClass = createEClass(TEMPLATE_MATCH);
    createEReference(templateMatchEClass, TEMPLATE_MATCH__SELECTOR);

    slotMatchEClass = createEClass(SLOT_MATCH);
    createEReference(slotMatchEClass, SLOT_MATCH__FIRST);
    createEReference(slotMatchEClass, SLOT_MATCH__SECOND);

    propertyValueEClass = createEClass(PROPERTY_VALUE);
    createEAttribute(propertyValueEClass, PROPERTY_VALUE__VALUE);
    createEAttribute(propertyValueEClass, PROPERTY_VALUE__VALUE_NUMB);
    createEReference(propertyValueEClass, PROPERTY_VALUE__OCLVALUE);
    createEAttribute(propertyValueEClass, PROPERTY_VALUE__HAS_PROPERTY);
    createEReference(propertyValueEClass, PROPERTY_VALUE__ARGUMENT);

    conditionEClass = createEClass(CONDITION);
    createEReference(conditionEClass, CONDITION__EXPRESSION);

    specificationCSEClass = createEClass(SPECIFICATION_CS);
    createEAttribute(specificationCSEClass, SPECIFICATION_CS__OWNED_EXPRESSION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    templateDefEClass.getESuperTypes().add(this.getTemplateRuleOrDef());
    templateRuleEClass.getESuperTypes().add(this.getTemplateRuleOrDef());
    basicTemplateRuleEClass.getESuperTypes().add(this.getTemplateRule());
    templateGeneratorRuleEClass.getESuperTypes().add(this.getTemplateRule());
    forEachExpressionEClass.getESuperTypes().add(this.getTemplateRulePart());
    ifExpressionEClass.getESuperTypes().add(this.getTemplateRulePart());
    staticTemplateRulePartEClass.getESuperTypes().add(this.getTemplateRulePart());
    templateFunctionCallEClass.getESuperTypes().add(this.getTemplateRulePart());
    slotCallEClass.getESuperTypes().add(this.getTemplateRulePart());
    localOrValueCallEClass.getESuperTypes().add(this.getTemplateRulePart());
    localEvaluationCallEClass.getESuperTypes().add(this.getTemplateRulePart());
    evaluationCallEClass.getESuperTypes().add(this.getTemplateRulePart());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Config(), this.getConfig(), null, "config", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_ImportStatement(), this.getImport(), null, "importStatement", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_TemplateDefs(), this.getTemplateDef(), null, "templateDefs", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_TemplateGenDefs(), this.getTemplateGenDef(), null, "templateGenDefs", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Templates(), this.getTemplateRule(), null, "templates", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Properties(), this.getPropertyRule(), null, "properties", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(configEClass, Config.class, "Config", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConfig_HasMinImprovement(), ecorePackage.getEBoolean(), "hasMinImprovement", null, 0, 1, Config.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConfig_MinImprovement(), ecorePackage.getEBigDecimal(), "minImprovement", null, 0, 1, Config.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConfig_HasMaxDegression(), ecorePackage.getEBoolean(), "hasMaxDegression", null, 0, 1, Config.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConfig_MaxDegression(), ecorePackage.getEBigDecimal(), "maxDegression", null, 0, 1, Config.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConfig_HaxMaxThings(), ecorePackage.getEBoolean(), "haxMaxThings", null, 0, 1, Config.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConfig_MaxThings(), ecorePackage.getEInt(), "maxThings", null, 0, 1, Config.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImport_Name(), ecorePackage.getEString(), "name", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateRuleOrDefEClass, TemplateRuleOrDef.class, "TemplateRuleOrDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTemplateRuleOrDef_Name(), ecorePackage.getEString(), "name", null, 0, 1, TemplateRuleOrDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateDefEClass, TemplateDef.class, "TemplateDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTemplateDef_JavaClass(), ecorePackage.getEString(), "javaClass", null, 0, 1, TemplateDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateGenDefEClass, TemplateGenDef.class, "TemplateGenDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTemplateGenDef_Name(), ecorePackage.getEString(), "name", null, 0, 1, TemplateGenDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTemplateGenDef_SuperRule(), this.getTemplateRuleOrDef(), null, "superRule", null, 0, 1, TemplateGenDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemplateGenDef_JavaClass(), ecorePackage.getEString(), "javaClass", null, 0, 1, TemplateGenDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateRuleEClass, TemplateRule.class, "TemplateRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTemplateRule_Groups(), ecorePackage.getEString(), "groups", null, 0, -1, TemplateRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(basicTemplateRuleEClass, BasicTemplateRule.class, "BasicTemplateRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBasicTemplateRule_Type(), this.getTemplateDef(), null, "type", null, 0, 1, BasicTemplateRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateGeneratorRuleEClass, TemplateGeneratorRule.class, "TemplateGeneratorRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTemplateGeneratorRule_Type(), this.getTemplateGenDef(), null, "type", null, 0, 1, TemplateGeneratorRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTemplateGeneratorRule_TypeDef(), this.getTypeDef(), null, "typeDef", null, 0, -1, TemplateGeneratorRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTemplateGeneratorRule_IdPart(), this.getTemplateRulePart(), null, "idPart", null, 0, -1, TemplateGeneratorRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTemplateGeneratorRule_TemplateRulePart(), this.getTemplateRulePart(), null, "templateRulePart", null, 0, -1, TemplateGeneratorRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeDefEClass, TypeDef.class, "TypeDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeDef_Type(), ecorePackage.getEString(), "type", null, 0, 1, TypeDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTypeDef_Name(), ecorePackage.getEString(), "name", null, 0, 1, TypeDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateRulePartEClass, TemplateRulePart.class, "TemplateRulePart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(forEachExpressionEClass, ForEachExpression.class, "ForEachExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getForEachExpression_Type(), ecorePackage.getEString(), "type", null, 0, 1, ForEachExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getForEachExpression_Variable(), ecorePackage.getEString(), "variable", null, 0, 1, ForEachExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getForEachExpression_ExprVar(), ecorePackage.getEString(), "exprVar", null, 0, 1, ForEachExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getForEachExpression_CompleteExpr(), ecorePackage.getEString(), "completeExpr", null, 0, 1, ForEachExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getForEachExpression_Join(), this.getTemplateRulePart(), null, "join", null, 0, -1, ForEachExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getForEachExpression_Body(), this.getTemplateRulePart(), null, "body", null, 0, -1, ForEachExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ifExpressionEClass, IfExpression.class, "IfExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIfExpression_Val(), ecorePackage.getEString(), "val", null, 0, 1, IfExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIfExpression_Then(), this.getTemplateRulePart(), null, "then", null, 0, -1, IfExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIfExpression_Else(), this.getTemplateRulePart(), null, "else", null, 0, -1, IfExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(staticTemplateRulePartEClass, StaticTemplateRulePart.class, "StaticTemplateRulePart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStaticTemplateRulePart_Value(), ecorePackage.getEString(), "value", null, 0, 1, StaticTemplateRulePart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateFunctionCallEClass, TemplateFunctionCall.class, "TemplateFunctionCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTemplateFunctionCall_IsReference(), ecorePackage.getEBoolean(), "isReference", null, 0, 1, TemplateFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemplateFunctionCall_Name(), ecorePackage.getEString(), "name", null, 0, 1, TemplateFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTemplateFunctionCall_ParValue(), this.getTemplateParameterValue(), null, "parValue", null, 0, -1, TemplateFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(slotCallEClass, SlotCall.class, "SlotCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSlotCall_Name(), ecorePackage.getEString(), "name", null, 0, 1, SlotCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSlotCall_MinValue(), ecorePackage.getEInt(), "minValue", null, 0, 1, SlotCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSlotCall_MaxValue(), ecorePackage.getEInt(), "maxValue", null, 0, 1, SlotCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(localOrValueCallEClass, LocalOrValueCall.class, "LocalOrValueCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLocalOrValueCall_Name(), ecorePackage.getEString(), "name", null, 0, 1, LocalOrValueCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(localEvaluationCallEClass, LocalEvaluationCall.class, "LocalEvaluationCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLocalEvaluationCall_Value(), ecorePackage.getEString(), "value", null, 0, 1, LocalEvaluationCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateParameterValueEClass, TemplateParameterValue.class, "TemplateParameterValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTemplateParameterValue_PropName(), ecorePackage.getEString(), "propName", null, 0, 1, TemplateParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemplateParameterValue_VarName(), ecorePackage.getEString(), "varName", null, 0, 1, TemplateParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemplateParameterValue_SlotName(), ecorePackage.getEString(), "slotName", null, 0, 1, TemplateParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemplateParameterValue_MinValue(), ecorePackage.getEInt(), "minValue", null, 0, 1, TemplateParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemplateParameterValue_MaxValue(), ecorePackage.getEInt(), "maxValue", null, 0, 1, TemplateParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemplateParameterValue_Direct(), ecorePackage.getEString(), "direct", null, 0, 1, TemplateParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(evaluationCallEClass, EvaluationCall.class, "EvaluationCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEvaluationCall_Value(), ecorePackage.getEString(), "value", null, 0, 1, EvaluationCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(propertyRuleEClass, PropertyRule.class, "PropertyRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPropertyRule_Selector(), this.getSelector(), null, "selector", null, 0, 1, PropertyRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPropertyRule_Property(), this.getProperty(), null, "property", null, 0, -1, PropertyRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectorEClass, Selector.class, "Selector", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelector_Selectors(), this.getSingleSelector(), null, "selectors", null, 0, -1, Selector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(singleSelectorEClass, SingleSelector.class, "SingleSelector", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSingleSelector_AllTypes(), ecorePackage.getEBoolean(), "allTypes", null, 0, 1, SingleSelector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSingleSelector_ReferredName(), ecorePackage.getEString(), "referredName", null, 0, 1, SingleSelector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSingleSelector_Condition(), this.getCondition(), null, "condition", null, 0, 1, SingleSelector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(propertyEClass, Property.class, "Property", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getProperty_TemplateMatch(), this.getTemplateMatch(), null, "templateMatch", null, 0, 1, Property.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProperty_SlotMatch(), this.getSlotMatch(), null, "slotMatch", null, 0, 1, Property.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getProperty_Name(), ecorePackage.getEString(), "name", null, 0, 1, Property.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProperty_Condition(), this.getCondition(), null, "condition", null, 0, 1, Property.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProperty_Value(), this.getPropertyValue(), null, "value", null, 0, -1, Property.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateMatchEClass, TemplateMatch.class, "TemplateMatch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTemplateMatch_Selector(), this.getSingleSelector(), null, "selector", null, 0, 1, TemplateMatch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(slotMatchEClass, SlotMatch.class, "SlotMatch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSlotMatch_First(), this.getSingleSelector(), null, "first", null, 0, 1, SlotMatch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSlotMatch_Second(), this.getSingleSelector(), null, "second", null, 0, 1, SlotMatch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(propertyValueEClass, PropertyValue.class, "PropertyValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPropertyValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, PropertyValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPropertyValue_ValueNumb(), ecorePackage.getEBigDecimal(), "valueNumb", null, 0, 1, PropertyValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPropertyValue_Oclvalue(), this.getSpecificationCS(), null, "oclvalue", null, 0, 1, PropertyValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPropertyValue_HasProperty(), ecorePackage.getEBoolean(), "hasProperty", null, 0, 1, PropertyValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPropertyValue_Argument(), this.getPropertyValue(), null, "argument", null, 0, -1, PropertyValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionEClass, Condition.class, "Condition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCondition_Expression(), this.getSpecificationCS(), null, "expression", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(specificationCSEClass, SpecificationCS.class, "SpecificationCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSpecificationCS_OwnedExpression(), ecorePackage.getEString(), "ownedExpression", null, 0, 1, SpecificationCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //EcssLanguagePackageImpl
