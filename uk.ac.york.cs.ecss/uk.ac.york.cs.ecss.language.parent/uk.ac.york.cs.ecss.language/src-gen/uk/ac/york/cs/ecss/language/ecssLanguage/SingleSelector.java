/**
 * generated by Xtext 2.14.0
 */
package uk.ac.york.cs.ecss.language.ecssLanguage;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Single Selector</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.SingleSelector#isAllTypes <em>All Types</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.SingleSelector#getReferredName <em>Referred Name</em>}</li>
 *   <li>{@link uk.ac.york.cs.ecss.language.ecssLanguage.SingleSelector#getCondition <em>Condition</em>}</li>
 * </ul>
 *
 * @see uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage#getSingleSelector()
 * @model
 * @generated
 */
public interface SingleSelector extends EObject
{
  /**
   * Returns the value of the '<em><b>All Types</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>All Types</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>All Types</em>' attribute.
   * @see #setAllTypes(boolean)
   * @see uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage#getSingleSelector_AllTypes()
   * @model
   * @generated
   */
  boolean isAllTypes();

  /**
   * Sets the value of the '{@link uk.ac.york.cs.ecss.language.ecssLanguage.SingleSelector#isAllTypes <em>All Types</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>All Types</em>' attribute.
   * @see #isAllTypes()
   * @generated
   */
  void setAllTypes(boolean value);

  /**
   * Returns the value of the '<em><b>Referred Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Referred Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Referred Name</em>' attribute.
   * @see #setReferredName(String)
   * @see uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage#getSingleSelector_ReferredName()
   * @model
   * @generated
   */
  String getReferredName();

  /**
   * Sets the value of the '{@link uk.ac.york.cs.ecss.language.ecssLanguage.SingleSelector#getReferredName <em>Referred Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Referred Name</em>' attribute.
   * @see #getReferredName()
   * @generated
   */
  void setReferredName(String value);

  /**
   * Returns the value of the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Condition</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Condition</em>' containment reference.
   * @see #setCondition(Condition)
   * @see uk.ac.york.cs.ecss.language.ecssLanguage.EcssLanguagePackage#getSingleSelector_Condition()
   * @model containment="true"
   * @generated
   */
  Condition getCondition();

  /**
   * Sets the value of the '{@link uk.ac.york.cs.ecss.language.ecssLanguage.SingleSelector#getCondition <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Condition</em>' containment reference.
   * @see #getCondition()
   * @generated
   */
  void setCondition(Condition value);

} // SingleSelector
